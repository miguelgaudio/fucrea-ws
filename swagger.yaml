swagger: '2.0'
info:
  version: "1"
  title: fucrea
host: basic-auth-server.herokuapp.com
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
#responseCodesDefinition:
#  200:
#    descripcion: Success, no modifica estados de base de datos
#  201:
#    descripcion: Success, crea nuevo objeto en base  de datos
#  204:
#    descripcion: Success, modifica un objeto de base de datos
#  400:
#    descripcion: Error proveniente del cliente
#  401:
#    descripcion: Usuario no autorizado para la accion por falta de credenciales
#  403:
#    descripcion: Usuario no autorizado por falta de permisos
#  404:
#    descripcion: Recurso no encontrado
#  500:
#    descripcion: Error proveniente del servidor
paths:
  ### USERS SERVICES
  /users/:
    post:
      description: |
        Creates an user and sends him an email with the password assigned if the user with the given username does not exists.
        Associate the user with some of my establishments.
        If not, an invitation will be sent by email if an email was specified in request. The email will contain the assigned password.
        Note that the beavior of this POST sometimes creates objects and sometimes modifies the object (referenced by the username).
        Note that, if provided, the email must be uniqe to let the user reset his password.
        If the user already exists in the system, the email field and the password field will be ignored.
        If the user already exists in system, it must have the same role as specified in request.
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Bearer: []
      parameters:
        -
          name: user
          in: body
          description: User's info.
          required: false
          schema:
            $ref: '#/definitions/UserPOST'
      responses:
        201:
          description: User created Ok.
          schema:
            type: object
            properties:
              user_already_in_system:
                type: boolean
              user:
                $ref: '#/definitions/User'
        400:
          description:
            1. Already exists an user with that email.
            2. Already exists an user with that username.
            3. You are not allowed to create users with higher role than you.
            4. The user already exists in the system but with other role.
    get:
      description: |
        List users in my establishments. The user itself will be not in the list. Only users with lower roles (subordinated) will be listed.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /users/{id}/:
    patch:
      description: |
        Updates user's info.
        If active user is an advisor, it will be only allow to manage producers, althouth he can list any other user in his establishments.
        Only subordinate users can be changed.
        Current user must not use this WS to chenge itself, must use POST/users/change_info/ and POST/users/change_sensitive_info/.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: id
          in: path
          required: true
          description: User's id
          type: integer
        -
          name: user
          in: body
          description: User's info
          schema:
            $ref: '#/definitions/UserPATCH'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
        400:
          description:
            1. Already exists an user with that email.
            2. Already exists an user with that username.
            3. You are not allowed to promote users to a role higher than yours.
    delete:
      description: |
        Deasociate user from all my establishments (the user will feel like it was deleted). Only subordinate users can be deleted. Users cant delete itselves.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: id
          in: path
          required: true
          description: User's id
          type: integer
      responses:
        204:
          description: Ok
        404:
          description: User not found (or you arent allowed to delete him).
  /users/{id}/change_password/:
    patch:
      description: |
        Updates user's password.
        Current user must not use this WS to chenge itself, must use POST/users/change_sensitive_info/.
        An email was sent (if the target user has one) with the new password.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: id
          in: path
          required: true
          description: User's id
          type: integer
        -
          name: info
          in: body
          description: User's info
          schema:
            properties:
              password:
                type: string
      responses:
        204:
          description: Ok
        404:
          description: User not found
  /users/change_info/:
    post:
      description: |
        Changes info for the current user. That info is not sensitive nor important for the system internals (mainly user's profile info).
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: data
          in: body
          required: true
          description: parameters to update.
          schema:
            $ref: '#/definitions/UserUnsensitiveInfo'
      responses:
        200:
          description: Info modified OK.
          schema:
            $ref: '#/definitions/User'
  /users/change_sensitive_info/:
    post:
      description: |
        Changes sensitive info that must be protected by password (eg. email, password, username) for current user.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: data
          in: body
          required: true
          description: parameters to update.
          schema:
            properties:
              password:
                type: string
              info:
                $ref: '#/definitions/UserSensitiveInfo'
      responses:
        200:
          description: Info modified OK. Informative email is sent to user (if it has an email), to the email (or new email) address.
        400:
          description:
            1. Already exists an user with that username.
            2. Already exists an user with that email.
            3. Password provided is not correct.
  /users/reset_password/request/:
    post:
      description: |
        Sends an email with a token to reset password.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: email
          in: body
          required: true
          description: User's to send reset token to (if the user has a email). The 'XXX' in the email template will be replaced with the reset_token and included in the email.
          schema:
            properties:
              username:
                type: string
              reset_url_template:
                type: string
                # example:
                #   'usuarios/reset_pass?reset_token=XXX&algomas=1'
      responses:
        200:
          description: Mail sent Ok.
          schema:
            properties:
              sent_to:
                type: string
        400:
          description:
            The user has no email
        404:
          description:
            No user found with that username
  /users/reset_password/confirm/:
    post:
      description: |
        Sends supplied reset token to allow user reset his password. Does not makes an implicit login (doesnt returns an access_token).
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: reset_data
          in: body
          required: true
          description: Authentication token sent by email to reset user's password, and new password.
          schema:
            properties:
              password:
                type: string
              reset_token:
                type: string
      responses:
        204:
          description: Password reseted OK.
        404:
          description: The token is not valid.
  /users/login/:
    post:
      description: |
        User logs in the platform. If remember_me the access_token has a longer expiricy period.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: credentials
          in: body
          description: User's login credentials
          required: true
          schema:
            properties:
              username:
                type: string
              password:
                type: string
              remember_me:
                type: boolean
      responses:
        200:
          description: User logged in
          schema:
            type: object
            properties:
              access_token:
                type: string
              user:
                $ref: '#/definitions/UserLogin'
        400:
          description: No user with that username, or auth failed (pass or username wrong).
  /users/logout/:
    post:
      description: |
        User logs out of the platform. Log out all sessions (delete all active tokens) that doesnt have 'remmember'?
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        -
          name: credentials
          in: body
          description: User's login credentials
          required: true
          schema:
            properties:
              username:
                type: string
              password:
                type: string
              remember_me:
                type: boolean
      responses:
        204:
          description: User logged out Ok.
  ### USERS SERVICES END
  ### ADMINISTRATION SERVICES
  /establishments/:
    get:
      description: |
        List establishments
      security:
        - Bearer: []
      parameters:
        -
          name: reduced
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Establecimientos obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Establishment'
  /establishments/{id}/:
    patch:
       description: |
          Updates establishment's info
       security:
        - Bearer: []
       consumes:
        - application/json
       produces:
        - application/json
       parameters:
        -
          name: establishment
          in: body
          description: Establishment info
          required: true
          schema:
            $ref: '#/definitions/EstablishmentPATCH'
        -
          name: id
          in: path
          description: Establishment's id
          required: true
          type: integer
       responses:
         204:
           description: Establecimiento actualizado correctamente
  /establishments/{id}/characterizations/:
    post:
      description: |
        Create new establishment's categorization
      security:
        - Bearer: []
      parameters:
        -
          name: characterization
          in: body
          required: true
          description: Characterization info
          schema:
            $ref: '#/definitions/CharacterizationPOSTList'
        -
          name: id
          in: path
          required: true
          description: Establishment's id
          type: integer
      responses:
         201:
           description: Categorización creada con éxito
  /establishments/{id}/lots/bulk/:
    post:
      description: |
        Create new lot in establishment
      security:
        - Bearer: []
      parameters:
        -
          name: lot
          in: body
          required: true
          description: Lot info
          schema:
            type: array
            items:
              $ref: '#/definitions/LotInEstablishmentPOST'
        -
          name: id
          in: path
          required: true
          description: Establishment's id
          type: integer
      responses:
         201:
            description: Lote modificado con éxito
            schema:
              type: array
              items:
                $ref: '#/definitions/LotInEstablishmentPOST'
  /establishments/{id}/lots/:
    get:
      description: |
        Get lots in the establishment
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          description: Establishment's id
          type: integer
        -
          name: reduced
          in: query
          required: false
          description: Listado reducido
          type: boolean
      responses:
         200:
           description: Lote retornado
           schema:
            type: array
            items:
              $ref: '#/definitions/LotInEstablishmentPOST'
    post:
      description: |
        Create new lot in establishment
      security:
        - Bearer: []
      parameters:
        -
          name: lot
          in: body
          required: true
          description: Lot info
          schema:
            $ref: '#/definitions/LotInEstablishmentPOST'
        -
          name: id
          in: path
          required: true
          description: Establishment's id
          type: integer
      responses:
         201:
           description: Lote modificado con éxito
           schema:
            $ref: '#/definitions/LotInEstablishmentPOST'
  /companies/:
    get:
      description: |
        List user's companies
      security:
        - Bearer: []
      responses:
        200:
          description: Empresas obtenidas correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Company'
    post:
      description: |
        Creates a new company
      security:
        - Bearer: []
      parameters:
        -
          name: company
          in: body
          required: true
          description: Company info
          schema:
            $ref: '#/definitions/CompanyPOST'
      responses:
        200:
          description: Empresas creada correctamente
  /companies/{id}/:
    patch:
      description: |
        Updates company's data
      security:
        - Bearer: []
      parameters:
        -
          name: company
          in: body
          required: true
          description: Company info
          schema:
            $ref: '#/definitions/CompanyPOST'
        -
          name: id
          in: path
          required: true
          description: Company's id
          type: integer
      responses:
        204:
          description: Empresa actualizada correctamente
    delete:
      description: |
        Deletes a company
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          description: Company's id
          type: integer
      responses:
        204:
          description: Empresa eliminada correctamente
  /companies/{id}/unasigned_establishments/:
    get:
      description: |
        Obitenen los establecimientos no asignados a la empresa
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          description: Company's id
          type: integer
      responses:
        200:
          description: Ok
  /companies/establishments/:
    get:
      description: |
        Lists companies with its establishments in brief format
      security:
        - Bearer: []
      responses:
        200:
          description: Establecimientos obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/EstablishmentBrief'
  /lots/:
    get:
      description: |
         List lots
      security:
        - Bearer: []
      parameters:
        -
          name: reduced
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Lotes obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Lot'
  /lots/decode_kml/:
    post:
      description: |
        Translates many lots from a KML file to a lots GEOJsonFeatureCollection.
        No changes in BD are maded.
        Uses each KML placeholder.name tag as each lot's code.
        Keeps metadata in the KML's ExtraData translated into the properties object of each GEOJsonFeature in response.
        Returns default values for the each lot field as metadata in the response geojson properties.
      security:
        - Bearer: []
      consumes:
        - multipart/form-data
      parameters:
        -
          name: kml_file
          in: formData
          description: El archivo KML a interpretar
          required: true
          type: file
      responses:
        200:
          description: KML traducido OK
          schema:
            $ref: '#/definitions/GEOJsonFeatureCollection'
  /lots/decode_kml_single/:
    post:
      description: |
        Translates a KML file to a Lot GEOJsonFeature.
        No changes in BD are maded.
        Keeps metadata in the KML's ExtraData translated in the properties object of the response GEOJsonFeature.
        Returns default values for the each lot field as metadata in the response geojson properties.
        Meld all the geometries as one.
        Tries to takes the current lot (the one used to fill missing lot metadata, (eg: description, coneat, etc)) from the KML's tag placeholder.name (as its lot's code).
      security:
        - Bearer: []
      consumes:
        - multipart/form-data
      parameters:
        -
          name: kml_file
          in: formData
          description: El archivo KML a interpretar
          required: true
          type: file
      responses:
        200:
          description: KML traducido OK
          schema:
            $ref: '#/definitions/GEOJsonFeature'
  /lots/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Updates a lot
      parameters:
        -
          name: lot
          in: body
          required: true
          description: Lots info
          schema:
            $ref: '#/definitions/LotPATCH'
        -
          name: id
          in: path
          required: true
          description: Lots's id
          type: integer
      responses:
        204:
          description: Lote actualizado correctamente
        404:
          description: Lote no enontrado
    delete:
      description: |
        Deletes a lot
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          description: Lots's id
          type: integer
      responses:
        204:
          description: Lote eliminada correctamente
        404:
          description: Lote no enontrado
  /lots/{id}/decode_kml_single/:
    patch:
      description: |
        Translates a KML file to a Lot GEOJsonFeature.
        No changes in BD are maded.
        Keeps metadata in the KML's ExtraData translated in the properties object of the response GEOJsonFeature.
        Returns default values for the each lot field as metadata in the response geojson properties.
        Meld all the geometries as one.
      security:
        - Bearer: []
      consumes:
        - multipart/form-data
      parameters:
        -
          name: kml_file
          in: formData
          description: El archivo KML a interpretar
          required: true
          type: file
        -
          name: id
          in: path
          required: true
          description: Lots's id
          type: integer
      responses:
        200:
          description: KML traducido OK
          schema:
            $ref: '#/definitions/GEOJsonFeature'
  /lots/{id}/join/:
    patch:
      security:
        - Bearer: []
      description: |
        Join many lots geofences into the lot in the url path. The Lots joined are deleted
      parameters:
        -
          name: joined_lots
          in: body
          required: true
          description: Lots info
          schema:
            type: object
            properties:
              lots:
                type: array
                items:
                  type: integer
        -
          name: id
          in: path
          required: true
          description: Lots's id
          type: integer
      responses:
        200:
          description: Lote unido con otros lotes OK
          schema:
            $ref: '#/definitions/LotInEstablishmentPOST'
        404:
          description: Lote del path no enontrado
  /lots/divide/:
    post:
      security:
        - Bearer: []
      description: |
        Create many lots with the data passed in the body.
        parametro parent:
          es un objeto similar al usado en patch de lotes, pero con un Id obligatorio que sirve para identificar al padre.
          Si otros parámetros son pasados aparte del Id, éstos alteran a ese mismo lote, y el resto de los parámetros se mantienen iguales (partial update).
          Se debe pasar sobre todo el parámetro geocerca pues no se calcula más como el residuo de los demás lotes desde backend, aunque sigue siendo opcional su envío (en ese caso quedaría igual que antes la geometría del lote padre, lo que es malo pq posiblemente se solape con sus hijos).
        parametro divisions:
          Es una lista de formato similar a parent, pero con su Id opcional, y el resto de los parámetros casi todos requeridos (como en el POST de creación de lotes).
      parameters:
        -
          name: new_lots
          in: body
          required: true
          description: Many Lots infos
          schema:
            type: object
            properties:
              divisions:
                type: array
                items:
                  $ref: '#/definitions/LotInEstablishmentPOST'
              parent:
                $ref: '#/definitions/LotPATCH'
      responses:
        200:
          description: Lotes divididos OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LotInEstablishmentPOST'
        404:
          description: Lote parent no enontrado
  /crea_groups/:
    get:
      description: |
         List Crea groups
      security:
        - Bearer: []
      responses:
        200:
          description: Crea groups obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/CreaGroup'
  /crea_groups/all/:
    get:
      description: |
         List Crea groups
      security:
        - Bearer: []
      responses:
        200:
          description: Crea groups obtenidos correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                id:
                  type: integer
  /crea_groups/establishments/:
    get:
      description: |
        Lists crea groups with its establishments in brief format
      security:
        - Bearer: []
      responses:
        200:
          description: Establecimientos obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/CreaGroupDeep'
  /providers/:
    get:
      description: |
         List providers
      security:
        - Bearer: []
      parameters:
        -
          name: reduced
          in: query
          required: false
          type: boolean
        -
          name: establishment_id
          in: query
          required: false
          type: integer
      responses:
        200:
          description: Proveedores groups obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Provider'
    post:
      description: |
        Creates a new provider
      security:
        - Bearer: []
      parameters:
        -
          name: provider
          in: body
          required: true
          description: Provider info
          schema:
            $ref: '#/definitions/ProviderPOST'
      responses:
        200:
          description: Proveedor creada correctamente
  /providers/{id}/:
    patch:
      description: |
        Updates provider's data
      security:
        - Bearer: []
      parameters:
        -
          name: provider
          in: body
          required: true
          description: Provider info
          schema:
            $ref: '#/definitions/ProviderPATCH'
        -
          name: id
          in: path
          required: true
          description: Provider's id
          type: integer
      responses:
        204:
          description: Proveedor actualizada correctamente
        404:
          description: Empresa no enontrada
    delete:
      description: |
        Deletes a provider
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          description: Provider's id
          type: integer
      responses:
        204:
          description: Proveedor eliminada correctamente
        404:
          description: Empresa no enontrada
  ### ADMINISTRATION SERVICES END
  ### AUX SERVICES
  /forms/characterizations/:
    get:
      description: |
        Lists every field with its options to fill the categorizations and filters forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
              $ref: '#/definitions/CharacterizationsAndFiltersFormList'
  /forms/indicators/:
    get:
      description: |
        Lists every field with its options to fill the indicators and filters forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
              $ref: '#/definitions/IndicatorFilterFormList'
  /forms/user_forms/:
    get:
      description: |
        Lists every field with its options to fill the users forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
              $ref: '#/definitions/UserFormList'
  /forms/land_use/:
    get:
      description: |
        Lists months and crops
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
              $ref: '#/definitions/LandUseFormList'
  /forms/land_use/oldest/:
    get:
      description: |
        Returns oldest exercise to list in land uses
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
              type: object
              properties:
                oldest_exercise:
                  type: integer
                latest_exercise:
                  type: integer
  /forms/account_plans/:
    get:
      description: |
        Lists every field with its options to fill the account plans forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
              $ref: '#/definitions/AccountPlans'
  /forms/supplies/:
    get:
      description: |
        Lists every field with its options to fill the supplies forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: object
            properties:
              service_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              supply_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              movements_choices:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              units_choices:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              active_components:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    unit:
                      type: integer
                    category:
                      type: integer
              active_component_units:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
    post:
      description: |
        Requests creation of a new active component
      security:
        - Bearer: []
      parameters:
        -
          name: active_component
          in: body
          required: false
          schema:
            properties:
              name:
                type: string
              comments:
                type: string
              unit:
                type: integer
              category:
                type: integer
      responses:
        200:
          description: Pedido hecho correctamente
  /forms/investments/:
    get:
      description: |
        Lists every field with its options to fill the investments forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: object
            properties:
              investment_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
  /forms/savings_banks/:
    get:
      description: |
        Lists every field with its options to fill the savings banks forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: object
            properties:
              currencies:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              savings_banks_categories:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              savings_banks_movements_deposit_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              savings_banks_movements_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
  /forms/tickets/:
    get:
      description: |
        Lists every field with its options to fill the savings banks forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: object
            properties:
              currencies:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              payment_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              ticket_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              sale_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              ticket_object_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
  /forms/agro/crop_types/:
    get:
      description: |
        Lists all the crop types for use in Agro section
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogEntryT1'
  /forms/cattle/:
    get:
      description: |
        Lists all the forms to use in cattle section
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: object
            properties:
              movement_types:
                type: array
                items:
                  type: string
              categories:
                type: object
                properties:
                  ovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  bovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  horse:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
              birth_categories:
                type: object
                properties:
                  ovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  bovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  horse:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
              next_categories:
                type: object
                properties:
                  ovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  bovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  horse:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
              adjust_reasons:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              trimesters:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT2'
              pregnancy_handle:
                type: object
                properties:
                  ovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  bovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
              pregnancy_categories:
                type: object
                properties:
                  ovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
                  bovine:
                    type: array
                    items:
                      $ref: '#/definitions/CatalogEntryT2'
  /forms/labours/:
    get:
      description: |
        Lists every field with its options to fill the labours forms
      security:
        - Bearer: []
      responses:
        200:
          description: Formularios obtenidos correctamente
          schema:
            type: object
            properties:
              labour_types:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT3'
              execution_stages:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT3'
  /forms/perform_period/:
    get:
      description: |
        Forms de listado para ejercicios de asesores
      security:
        - Bearer: []
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              closing_stages:
                type: array
                items:
                  $ref: '#/definitions/CatalogEntryT3'
  ### AUX SERVICES END
  ### INDICATORS SERVICES
  /indicators/summary/:
    get:
      description: |
        Returns list of indicators acording to user configuration
      parameters:
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: exercise_dates
          in: query
          required: true
          type: array
          items:
            type: string
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
         name: establishment_id
         in: query
         required: true
         type: integer
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
            type: array
            items:
             type: object
             properties:
              title:
                type: string
              graphics:
                type: object
                properties:
                  economical_evolution:
                    type: object
                    properties:
                      series:
                        type: object
                        properties:
                          producto_bruto_total:
                            type: array
                            items:
                              type: integer
                          ingreso_capital_real:
                            type: array
                            items:
                              type: integer
                          total_insumos_supuesto_propiedad:
                            type: array
                            items:
                              type: integer
                      categories:
                        type: array
                        items:
                          type: integer
                      type_graphic:
                        type: string
                      name:
                        type: string
                      yAxis:
                        type: string
                  area_evolution:
                    type: object
                    properties:
                      series:
                        type: object
                        properties:
                          agrcultural:
                            type: array
                            items:
                              type: integer
                          forest:
                            type: array
                            items:
                              type: integer
                          milkmaid:
                            type: array
                            items:
                              type: integer
                          cattle:
                            type: array
                            items:
                              type: integer
                          fine_seed:
                            type: array
                            items:
                              type: integer
                      categories:
                        type: array
                        items:
                          type: integer
                      type_graphic:
                            type: string
                      name:
                        type: string
  /indicators/graphic/management/:
    post:
      description: |
        Returns an indicators tree acording to filters selected
      parameters:
        -
           name: filters
           in: body
           required: false
           description: |
            Company_id=0 significa "Sin empresa", no "Todas las empresas", company_id=null significa todas las empresas. Establishment_id=0 o =null significa "Todos los establecimientos". Company_id=null y establishment_id=null significa todos los establecimientos de todas las empresas
           schema:
              properties:
                comparative_only:
                  type: boolean
                expanded:
                  type: boolean
                company_id:
                  type: integer
                crea_group_id:
                  type: integer
                establishment_id:
                  type: integer
                exercise_date:
                  type: array
                  items:
                    type: string
                    format: date
                comparative:
                  type: object
                  properties:
                    compare_w_myself:
                      type: boolean
                    exercise_date:
                      type: array
                      items:
                        type: string
                        format: date
                    company_id:
                      type: integer
                    crea_group_id:
                      type: integer
                    establishment_id:
                      type: integer
                    characterization:
                      $ref: '#/definitions/CharacterizationPOSTList'
                    filters:
                      type: array
                      items:
                        $ref: '#/definitions/IndicatorFilterPOSTList'
      responses:
        200:
          description: Indicador obtenido correctamente
          examples:
              name: 'r%'
              short_name: 'r%'
              value: 10
              children:
                - name: 'Cd bla bla'
                  short_name: 'Cd'
                  value: 2.3
                  children: []
                - name: 'Ingreso capital bla bla'
                  short_name: 'Ik'
                  value: 3
                  children: []
          schema:
            type: object
            properties:
              indicators_compared:
                type: integer
              indicators_list:
                type: array
                items:
                  type: object
                  properties:
                    tree:
                      type: object
                      properties:
                        name:
                          type: string
                        short_name:
                          type: string
                        value:
                          type: number
                          format: float
                        children:
                          type: array
                          items:
                            $ref: '#/definitions/IndicatorTree'
                    indicators_quantity:
                      type: integer
  /indicators/graphic/margin/:
    get:
      description: |
        Returns the evolution of MB for the delected exercises
      parameters:
        -
         name: filters
         in: body
         required: true
         description: Filters to calculate indicators
         schema:
            properties:
              company_id:
                type: integer
              crea_group_id:
                type: integer
              establishment_id:
                type: integer
              exercise_dates:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
             type: object
             properties:
                mb_evolution:
                  type: object
                  properties:
                    series:
                      type: object
                      properties:
                        agricultural:
                          type: array
                          items:
                            type: integer
                        cattle:
                          type: array
                          items:
                            type: integer
                        forest:
                          type: array
                          items:
                            type: integer
                        fine_seed:
                          type: array
                          items:
                            type: integer
                    categories:
                      type: array
                      items:
                        type: string
                mb_tables:
                  type: object
                  properties:
                    columns:
                      type: array
                      items:
                        type: string
                    content:
                      type: array
                      items:
                        type: object
                        properties:
                          exercise:
                            type: string
                          rows:
                            type: array
                            items:
                              type: string
  /indicators/detail/:
    get:
      description: |
        Returns an indicator list to show on the table
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
             type: array
             items:
               type: object
               properties:
                stored_comparatives:
                  $ref: '#/definitions/IndicatorDetailList'
    post:
      description: |
        Calculates an indicator acording to selected chategorization and filters
      parameters:
        -
           name: comparative
           in: body
           required: false
           description: Filters to calculate indicator
           schema:
              properties:
                  compare_w_myself:
                    type: boolean
                  exercise_date:
                    type: integer
                  company_id:
                    type: integer
                  establishment_id:
                    type: integer
                  characterization:
                    $ref: '#/definitions/CharacterizationPOSTList'
                  filters:
                      type: array
                      items:
                        $ref: '#/definitions/IndicatorFilterPOSTList'
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
             $ref: '#/definitions/IndicatorDetailList'
    delete:
      description: |
        Deletes a stored indicator detail
      parameters:
        -
           name: ids
           in: query
           required: false
           description: Indicator ids to delete, comma separated string
           type: array
           items:
            type: string
      responses:
        204:
          description: Indicador eliminada correctamente
        404:
          description: Indicador no enontrado
  /indicators/detail/descriptions/:
    post:
      description: |
        Updates descriptions of stored indicators detail
      parameters:
        -
          name: descriptions
          in: body
          required: false
          description: Indicator ids and descriptions to update
          schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  description:
                    type: string
      responses:
        204:
          description: Indicador eliminada correctamente
        404:
          description: Indicador no enontrado
  /indicators/detail/configuration/:
    get:
      description: |
        Returns an indicator identifier list to show on the table
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
             type: array
             items:
              type: string
    post:
      description: |
        Sends an indicator identifier list to save user's indicator table configuration
      parameters:
        -
           name: indicators
           in: body
           required: false
           description: List of Indicators reference name
           schema:
              type: array
              items:
                type: string
      responses:
        200:
          description: Indicadores obtenidos correctamente
  ### INDICATORS DEFINITIONS END
  ### LAND USES SERVICES
  /land_uses/summary/:
    get:
      description: |
        Returns land use values by type and exercise. Company_id, establishment_id and crea_group_id are exclusive between them
      parameters:
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: exercise_dates
          in: query
          required: true
          type: array
          items:
            type: string
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
         name: establishment_id
         in: query
         required: true
         type: integer
      responses:
        200:
          description: Usos de suelo obtenidos correctamente
          schema:
            type: array
            items:
                type: object
                properties:
                  land_use:
                    type: object
                    properties:
                      series:
                        type: object
                        properties:
                          soja:
                            type: array
                            items:
                              type: integer
                          sorgo:
                            type: array
                            items:
                              type: integer
                          maiz:
                            type: array
                            items:
                              type: integer
                          super_pastura:
                            type: array
                            items:
                              type: integer
                      categories:
                        type: array
                        items:
                          type: integer
                      name:
                        type: string
                      graphic_type:
                        type: string
                      yAxis:
                        type: string
  /land_uses/detail/:
    get:
      description: |
        Returns land use values by type and exercise. Company_id, establishment_id and crea_group_id are exclusive between them. Undefined hectares are sent by the crop key "undefined"
      parameters:
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: exercise_dates
          in: query
          required: true
          type: array
          items:
            type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
         name: establishment_id
         in: query
         required: true
         type: integer
      responses:
        200:
          description: Usos de suelo obtenidos correctamente
          schema:
            type: array
            items:
             type: object
             properties:
              exercise:
                type: integer
              summary:
                type: object
                properties:
                  series:
                    type: object
                    properties:
                      soja:
                        type: array
                        items:
                          type: integer
                      sorgo:
                        type: array
                        items:
                          type: integer
                      maiz:
                        type: array
                        items:
                          type: integer
                      super_pastura:
                        type: array
                        items:
                          type: integer
                  categories:
                    type: array
                    items:
                      type: integer
                  name:
                    type: string
                  graphic_type:
                    type: string
                  yAxis:
                    type: string
              detail:
                type: array
                items:
                  $ref: '#/definitions/MonthlyLandUse'
              completed_hectares_percentage:
                type: integer
              closed:
                type: boolean
              errors:
                type: array
                items:
                  type: object
                  properties:
                    exercise:
                      type: integer
                    hectares:
                      type: number
                      format: float
                    lot:
                      type: string
    post:
      description: |
        Updates a land use for selected months. Actions 0=crear, 1=modificar y 2=quitar
      parameters:
        -
          name: land_use
          in: body
          required: true
          schema:
            type: object
            properties:
              lot_id:
                type: integer
              exercise_date:
                type: integer
              month_start:
                type: integer
              crops:
                type: array
                items:
                  type: object
                  properties:
                    crop_id:
                      type: integer
                    hectares:
                      type: integer
                    duration:
                      type: integer
                    description:
                      type: string
                    previous_duration:
                      type: integer
                    previous_description:
                      type: string
                    previous_hectares:
                      type: number
                      format: float
                    action:
                      type: integer
                      description: 0=crear, 1=modificar y 2=quitar
      responses:
        200:
          description: Uso de suelo actualizado correctamente
    delete:
      description: |
        Deletes all land uses for selected months
      parameters:
        -
          name: land_use
          in: body
          required: true
          schema:
            type: object
            properties:
              lot_id:
                type: integer
              exercise_date:
                type: integer
              month_start:
                type: integer
              duration:
                type: integer
      responses:
        200:
          description: Uso de suelo actualizado correctamente
  /land_uses/by_lot/:
    get:
      security:
        - Bearer: []
      description: |
        Lists land uses by lot
      parameters:
        -
         name: establishment_id
         in: query
         required: true
         type: integer
        -
         name: exercise
         in: query
         required: true
         type: integer
      responses:
        200:
          description: Usos de suelo obtenidos correctamente
          schema:
            type: array
            items:
              $ref : "#/definitions/LandUseByLot"
  /land_uses/sequences/:
    get:
      security:
        - Bearer: []
      description: |
        Lists land uses by lot
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
        -
          name: crop_id
          in: query
          required: false
          type: integer
        -
          name: lot_id
          in: query
          required: false
          type: integer
      responses:
        200:
          description: Usos de suelo obtenidos correctamente
          schema:
            $ref : "#/definitions/LandUseSequence"
  ### LAND USES END
  ### SERVICE BEGIN
  /inventory/services/:
    get:
      description: |
         List services for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Insumos obtenidos correctamente
          schema:
             $ref: '#/definitions/ServiceList'
    post:
      security:
        - Bearer: []
      description: |
        Creates service
      parameters:
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            $ref: '#/definitions/ServicePOST'
      responses:
        201:
          description: Insumo agrado correctamente
          schema:
            $ref: '#/definitions/ServiceDetail'
  /inventory/services/{id}/:
    get:
      description: |
         Returns info about specified service and his movements
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Detalle obtenidos correctamente
          schema:
            $ref: '#/definitions/ServiceDetail'
    patch:
      security:
        - Bearer: []
      description: |
        Updates a the selected service
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              description:
                type: string
              comments:
                type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ServiceDetail'
  /inventory/services/{id}/add/:
    post:
      security:
        - Bearer: []
      description: |
        Adds a specified quantity for the selected service
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              quantity:
                type: number
                format: float
              unit_price:
                type: number
                format: float
              execution_date:
                type: string
                format: date
      responses:
        201:
          description: Insumos agrados correctamente
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              id:
                type: integer
              cost:
                type: number
                format: float
              quantity:
                type: integer
  # /inventory/services/{id}/loss/:
  #   post:
  #     security:
  #       - Bearer: []
  #     description: |
  #       Decrements a specified quantity for the selected supply
  #     parameters:
  #       -
  #         name: id
  #         in: path
  #         required: true
  #         description: Supply's id
  #         type: integer
  #       -
  #         name: supply
  #         in: body
  #         required: true
  #         description: Supply info
  #         schema:
  #           type: object
  #           properties:
  #             loss_reason:
  #               type: string
  #             quantity:
  #               type: number
  #               format: float
  #             execution_date:
  #               type: string
  #               format: date
  #     responses:
  #       201:
  #         description: Pérdida de servicio declarada correctamente
  #         schema:
  #           type: object
  #           properties:
  #             execution_date:
  #               type: string
  #               format: date
  #             id:
  #               type: integer
  #             cost:
  #               type: number
  #               format: float
  #             quantity:
  #               type: integer
  /inventory/services/{id}/use/:
    post:
      security:
        - Bearer: []
      description: |
        Decrements a specified quantity for the selected supply
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              quantity:
                type: number
                format: float
              execution_date:
                type: string
                format: date
              first_plan:
                type: string
              second_plan:
                type: string
              investment:
                type: integer
              description:
                type: string
      responses:
        201:
          description: Uso de servicio declarado correctamente
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              id:
                type: integer
              cost:
                type: number
                format: float
              quantity:
                type: integer
  ### SERVICE END
  ### SUPPLY BEGIN
  /inventory/supplies/catalogs/:
    get:
      description: |
         Lista los catalogos de insumos del establecimiento y los globales
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/SupplyCatalogItem'
  /inventory/supplies/:
    get:
      description: |
         List supplies for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Insumos obtenidos correctamente
          schema:
             $ref: '#/definitions/SupplyList'
    post:
      security:
        - Bearer: []
      description: |
        Creates supply
      parameters:
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            $ref: '#/definitions/SupplyPOST'
      responses:
        201:
          description: Insumo agrado correctamente
          schema:
            $ref: '#/definitions/SupplyDetail'
  /inventory/supplies/{id}/:
    get:
      description: |
         Returns info about specified supply and his movements
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Detalle obtenidos correctamente
          schema:
            $ref: '#/definitions/SupplyDetail'
    patch:
      security:
        - Bearer: []
      description: |
        Updates a the selected supply
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              description:
                type: string
              comments:
                type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/SupplyDetail'
  /inventory/supplies/{id}/add/:
    post:
      security:
        - Bearer: []
      description: |
        Adds a specified quantity for the selected supply
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              quantity:
                type: number
                format: float
              unit_price:
                type: number
                format: float
              execution_date:
                type: string
                format: date
      responses:
        201:
          description: Insumos agrados correctamente
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              id:
                type: integer
              cost:
                type: number
                format: float
              quantity:
                type: integer
  /inventory/supplies/{id}/loss/:
    post:
      security:
        - Bearer: []
      description: |
        Decrements a specified quantity for the selected supply
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              loss_reason:
                type: string
              quantity:
                type: number
                format: float
              execution_date:
                type: string
                format: date
      responses:
        201:
          description: Pérdida de insumos declarada correctamente
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              id:
                type: integer
              cost:
                type: number
                format: float
              quantity:
                type: integer
  /inventory/supplies/{id}/use/:
    post:
      security:
        - Bearer: []
      description: |
        Decrements a specified quantity for the selected supply
      parameters:
        -
          name: id
          in: path
          required: true
          description: Supply's id
          type: integer
        -
          name: supply
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              quantity:
                type: number
                format: float
              execution_date:
                type: string
                format: date
              first_plan:
                type: string
              second_plan:
                type: string
              investment:
                type: integer
              description:
                type: string
      responses:
        201:
          description: Pérdida de insumos declarada correctamente
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              id:
                type: integer
              cost:
                type: number
                format: float
              quantity:
                type: integer
  ### SUPPLY END
  ### MAQIUNARIA BEGIN
  /inventory/farm_equipment/:
    get:
      description: |
         List farm equipments for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Maquinaria obtenidos correctamente
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                description:
                  type: string
    post:
      security:
        - Bearer: []
      description: |
        Creates farm equipment
      parameters:
        -
          name: farm_equipment
          in: body
          required: true
          description: Farm equipment info
          schema:
            $ref: '#/definitions/FarmEquipmentPOST'
      responses:
        201:
          description: Maquinaria creada Ok
  /inventory/farm_equipment/{id}/:
    get:
      description: |
         Returns info about specified equipment and his movements
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: farm_equipment
          in: body
          required: true
          description: Supply info
          schema:
            type: object
            properties:
              loss_reason:
                type: string
              acquisition_date:
                type: string
                format: date
      responses:
        200:
          description: Maquinaria actualizada correctamente
          schema:
            $ref: '#/definitions/FarmEquipmentDetail'
    patch:
      description: |
         Returns info about specified equipment and his movements
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: farm_equipment
          in: body
          required: true
          description: Farm equipment info
          schema:
            type: object
            properties:
              description:
                type: string
              comments:
                type: string
              plate:
                type: string
              category:
                type: integer
      responses:
        200:
          description: Detalle obtenidos correctamente
          schema:
            $ref: '#/definitions/FarmEquipmentDetail'
  /inventory/farm_equipment/{id}/loss/:
    post:
      security:
        - Bearer: []
      description: |
        Decrements a specified quantity for the selected farm equipment and creates loss movement
      parameters:
        -
          name: id
          in: path
          required: true
          description: Farm equipment's id
          type: integer
        -
          name: farm_equipment
          in: body
          required: true
          description: Farm equipment info
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              loss_reason:
                type: string
      responses:
        201:
          description: Pérdida de maquinaria declarada correctamente
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
              id:
                type: integer
              cost:
                type: number
                format: float
              quantity:
                type: integer
              loss_reason:
                type: string
  /inventory/farm_equipment/types/:
    get:
      description: |
         List farm equipment types for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: false
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Tipos de maquinaria obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/FarmEquipmentType'
    post:
      security:
        - Bearer: []
      description: |
        Creates farm equipment type
      parameters:
        -
          name: farm_equipment_type
          in: body
          required: true
          description: Farm equipment type info
          schema:
            type: object
            properties:
              name:
                type: string
              establishment_id:
                type: integer
      responses:
        201:
          description: Tipo de maquinaria agregado Ok
          schema:
            $ref: '#/definitions/FarmEquipmentType'
  /inventory/farm_equipment/types/{id}/:
    patch:
      description: |
         Updates info about specified equipment type
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Equipamiento modificado correctamente
          schema:
            $ref: '#/definitions/FarmEquipmentType'
    delete:
      description: |
         Deletes specified equipment type
      security:
        - Bearer: []
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Equipamiento eliminado correctamente
  ### MAQUINARIA END
  ### INVENTORY BEGIN
  /inventory/catalog_items/:
    get:
      description: |
         Lista los tipos de Inventarios aplicables para la creacion de labores
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Items obtenidos correctamente
          schema:
            type: object
            properties:
              supply:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    unit:
                      type: integer
                    category:
                      type: integer
                    unit_price:
                      type: number
                      format: float
                    unit_price_update_date:
                      type: string
                      format: date
              service:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    unit:
                      type: integer
                    category:
                      type: integer
                    unit_price:
                      type: number
                      format: float
                    unit_price_update_date:
                      type: string
                      format: date
  /inventory/movements/:
    get:
      description: |
         List movements for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
          name: quantity
          in: query
          required: false
          type: integer
      responses:
        200:
          description: Movimientos obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Movement'
  /inventory/by_type/:
    get:
      description: |
         Lista maquinarias, insumos y servicios agrupados por tipo
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Ok
          schema:
            type: object
            properties:
              services:
                type: array
                items:
                  type: object
                  properties:
                    by:
                      type: integer
                    elems:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          description:
                            type: string
                          category:
                            type: integer
                          unit:
                            type: integer
                          unit_price:
                            type: number
                            format: float
                          unit_price_update_date:
                            type: string
                            format: date
              supplies:
                type: array
                items:
                  type: object
                  properties:
                    by:
                      type: integer
                    elems:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          description:
                            type: string
                          category:
                            type: integer
                          unit:
                            type: integer
                          unit_price:
                            type: number
                            format: float
                          unit_price_update_date:
                            type: string
                            format: date
              equipments:
                type: array
                items:
                  type: object
                  properties:
                    by:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                    elems:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          description:
                            type: string
                          category:
                            type: integer
                          unit:
                            type: integer
                          unit_price:
                            type: number
                            format: float
                          unit_price_update_date:
                            type: string
                            format: date
  /inventory/:
    get:
      description: |
         List movements for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Movimientos obtenidos correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Inventory'
  ### INVENTORY END
  ### INVESTMENT BEGIN
  /investments/:
    get:
      description: |
         List investments for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: active_only
          in: query
          required: false
          type: boolean
        -
          name: reduced
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Inversiones obtenidas correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/Investment'
    post:
      security:
        - Bearer: []
      description: |
        Creates Investment
      parameters:
        -
          name: investment
          in: body
          required: true
          description: investment info
          schema:
            $ref: '#/definitions/InvestmentPOST'
      responses:
        201:
          description: Insumos agrados correctamente
          schema:
            $ref: '#/definitions/Investment'
  /investments/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Updates Investment
      parameters:
        -
          name: id
          in: path
          required: true
          description: Investment's id
          type: integer
        -
          name: investment
          in: body
          required: true
          description: investment info
          schema:
            $ref: '#/definitions/InvestmentPATCH'
      responses:
        201:
          description: Insumos modificada Ok
    get:
      security:
        - Bearer: []
      description: |
        Updates Investment
      parameters:
        -
          name: id
          in: path
          required: true
          description: Investment's id
          type: integer
        -
          name: investment
          in: body
          required: true
          description: investment info
          schema:
            $ref: '#/definitions/InvestmentDetail'
      responses:
        201:
          description: Inversion get Ok
  ### INVESTMENT END
  ### Cajas BEGIN
  /savings_banks/:
    get:
      description: |
         List savings banks for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
          name: reduced
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Cajas obtenidas correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/SavingsBank'
    post:
      security:
        - Bearer: []
      description: |
        Creates Savings bank
      parameters:
        -
          name: savings_bank
          in: body
          required: true
          description: savings bank info
          schema:
            $ref: '#/definitions/SavingsBankPOST'
      responses:
        201:
          description: Caja agregada correctamente
          schema:
            $ref: '#/definitions/SavingsBank'
  /savings_banks/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Updates Savinsg bank
      parameters:
        -
          name: id
          in: path
          required: true
          description: Savings bank's id
          type: integer
        -
          name: savings_bank
          in: body
          required: true
          description: Savings bank info
          schema:
            $ref: '#/definitions/SavingsBankPATCH'
      responses:
        201:
          description: Caja modificada correctamente
          schema:
            $ref: '#/definitions/SavingsBankDetail'
    get:
      security:
        - Bearer: []
      description: |
        Updates Savings bank
      parameters:
        -
          name: id
          in: path
          required: true
          description: Investment's id
          type: integer
        -
          name: investment
          in: body
          required: true
          description: investment info
          schema:
            $ref: '#/definitions/SavingsBankDetail'
      responses:
        201:
          description: Caja obtenida correctamente
    delete:
      description: |
        Deletes a savings_bank.
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: id
          in: path
          required: true
          description: Saving Bank's id
          type: integer
      responses:
        204:
          description: Ok
        404:
          description: Saving Bank not found (or you arent allowed to delete him).
  /savings_banks/{id}/movements/:
    post:
      security:
        - Bearer: []
      description: |
        Updates Savinsg bank
      parameters:
        -
          name: id
          in: path
          required: true
          description: Savings bank's id
          type: integer
        -
          name: movement
          in: body
          required: true
          description: Savings bank info
          schema:
            $ref: '#/definitions/SavingsBankMovementPOST'
      responses:
        201:
          description: Caja modificada correctamente
          schema:
            $ref: '#/definitions/SavingsBankMovement'
  ### CAJAS END
  ### BOLETAS BEGIN
  /tickets/:
    get:
      description: |
         List tickets for the specified establishment
      security:
        - Bearer: []
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: company_id
          in: query
          required: true
          type: integer
        -
          name: crea_group_id
          in: query
          required: true
          type: integer
        -
          name: unpaid_only
          in: query
          required: false
          type: boolean
        -
          name: date_from
          in: query
          required: false
          type: string
          format: date
        -
          name: date_to
          in: query
          required: false
          type: string
          format: date
      responses:
        200:
          description: Boletas obtenidas correctamente
          schema:
            type: array
            items:
              $ref: '#/definitions/TicketResponse'
  /tickets/buy/:
    post:
      security:
        - Bearer: []
      description: |
        Creates buying Ticket
      parameters:
        -
          name: ticket
          in: body
          required: true
          description: ticket info
          schema:
            $ref: '#/definitions/TicketPurchasePOST'
      responses:
        201:
          description: Caja agregada correctamente
          schema:
            $ref: '#/definitions/TicketResponse'
        400:
          description: Algunos de los items tienen errores
          schema:
            type: object
            properties:
              farm_equipments:
                type: array
                items:
                  type: object
              supplies:
                type: array
                items:
                  type: object
  /tickets/sell/:
    post:
      security:
        - Bearer: []
      description: |
        Creates selling Ticket
      parameters:
        -
          name: ticket
          in: body
          required: true
          description: ticket info
          schema:
            $ref: '#/definitions/TicketSellPOST'
      responses:
        201:
          description: Caja agregada correctamente
          schema:
            $ref: '#/definitions/TicketResponse'
        400:
          description: Algunos de los items tienen errores
          schema:
            type: object
            properties:
              farm_equipments:
                type: array
                items:
                  type: object
              supplies:
                type: array
                items:
                  type: object
  /tickets/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Updates Ticket
      parameters:
        -
          name: id
          in: path
          required: true
          description: Ticket's id
          type: integer
        -
          name: ticket
          in: body
          required: true
          description: Ticket info
          schema:
            $ref: '#/definitions/TicketPATCH'
      responses:
        201:
          description: Boleta modificada correctamente
          schema:
            $ref: '#/definitions/TicketDetail'
    get:
      security:
        - Bearer: []
      description: |
        Details Ticket
      parameters:
        -
          name: id
          in: path
          required: true
          description: Ticket's id
          type: integer
        -
          name: ticket
          in: body
          required: true
          description: ticket info
          schema:
            $ref: '#/definitions/TicketDetail'
      responses:
        201:
          description: Boleta obtenida correctamente
  /tickets/{id}/payments/:
    post:
      security:
        - Bearer: []
      description: |
        Updates Ticket
      parameters:
        -
          name: id
          in: path
          required: true
          description: Ticket's id
          type: integer
        -
          name: payment
          in: body
          required: true
          description: Ticket info
          schema:
            $ref: '#/definitions/PaymentPost'
      responses:
        201:
          description: Pago ingresado correctamente
          schema:
            $ref: '#/definitions/Payment'
  /tickets/{id}/cancel/:
    patch:
      security:
        - Bearer: []
      description: |
        Cancel Ticket
      parameters:
        -
          name: id
          in: path
          required: true
          description: Ticket's id
          type: integer
      responses:
        204:
          description: Boleta cancelada Ok
  ### BOLETAS END
  ### AGRO BEGIN
  /agro/margin/:
    get:
      security:
        - Bearer: []
      description: |
        Returns the margin graphics given a price
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
        -
          name: crop_type
          in: query
          required: true
          type: string
        -
          name: estimated_price
          in: query
          required: true
          type: number
          format: float
      responses:
        200:
          description: Margen obtenido Ok
          schema:
            type: object
            properties:
              crop_margins_graphic:
                $ref: '#/definitions/DoubleGraphic'
              crop_type_margins:
                type: object
                properties:
                  pb:
                    type: number
                    format: float
                  cost:
                    type: number
                    format: float
                  margin:
                    type: number
                    format: float
  /agro/summary/:
    get:
      security:
        - Bearer: []
      description: |
        Returns a list of crop types with asociated data
      parameters:
        -
          name: establishment
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Cultivos obtenidos correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                crop_type:
                  type: object
                  properties:
                    id:
                      type: string
                    description:
                      type: string
                sown_hectares:
                  type: number
                  format: float
                harvested_hectares:
                  type: number
                  format: float
                harvested_throwput:
                  type: number
                  format: float
                sown_throwput:
                  type: number
                  format: float
                sales_throwput:
                  type: number
                  format: float
                current_stock:
                  type: number
                  format: float
  /agro/production/harvest/:
    post:
      security:
        - Bearer: []
      description: |
        Harvests a specified quantity for the selected land use
      parameters:
        -
          name: harvest
          in: body
          required: true
          description: Harvest info
          schema:
            type: object
            properties:
              area:
                type: number
                format: float
              execution_date:
                type: string
                format: date
              tons:
                type: number
                format: float
              land_use_id:
                type: integer
              description:
                type: string
      responses:
        201:
          description: Cosecha agrados correctamente
          schema:
            type: object
            properties:
              area:
                type: number
                format: float
              execution_date:
                type: string
                format: date
              tons:
                type: number
                format: float
              description:
                type: string
  /agro/production/harvest/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Nothing to say
      parameters:
        -
          name: id
          in: path
          type: integer
          required: true
        -
          name: harvest
          in: body
          required: true
          description: Harvest info
          schema:
            type: object
            properties:
              execution_date:
                type: string
                format: date
      responses:
        200:
          description: Nothing to say
          schema:
            type: object
            properties:
              area:
                type: number
                format: float
              execution_date:
                type: string
                format: date
              tons:
                type: number
                format: float
              description:
                type: string
  /agro/production/consume/:
    post:
      security:
        - Bearer: []
      description: |
        Consumes a specified quantity for the selected crop
      parameters:
        -
          name: harvest
          in: body
          required: true
          description: Consumption info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              crop_type:
                type: string
              tons:
                type: number
                format: float
              execution_date:
                type: string
                format: date
              unit_value:
                type: number
                format: float
              description:
                type: string
              first_plan:
                type: string
              second_plan:
                type: string
                # required: false
              investment_id:
                type: integer
                # required: false
      responses:
        201:
          description: Cultivo consumido correctamente
  /agro/production/general_harvest/:
    post:
      security:
        - Bearer: []
      description: |
        Harvest a specified quantity for the selected crop divided equally for all lots
      parameters:
        -
          name: harvest
          in: body
          required: true
          description: Harvest info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              description:
                type: string
              execution_date:
                type: string
                format: date
              land_uses:
                type: array
                items:
                  type: object
                  properties:
                    crop:
                      type: integer
                    area:
                      type: number
                      format: float
                    tons:
                      type: number
                      format: float
      responses:
        201:
          description: Cultivo cosechado correctamente
  /agro/production/fix_throwput/:
    post:
      security:
        - Bearer: []
      description: |
        Fixes throwput for the selected crop divided equally for all lots
      parameters:
        -
          name: stock
          in: body
          required: true
          description: Throwput info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              exercise:
                type: integer
              crop_type:
                type: string
              real_stock:
                type: number
                format: float
      responses:
        201:
          description: Cultivo cosechado correctamente
  /agro/production/adjust/:
    post:
      security:
        - Bearer: []
      description: |
        Creates an adjust stock movement
      parameters:
        -
          name: stock
          in: body
          required: true
          description: Adjust mov info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              crop_type:
                type: string
              description:
                type: string
              execution_date:
                type: string
                format: date
              tons:
                type: number
                format: float
      responses:
        201:
          description: Stock ajustado Ok
          schema:
            type: object
            properties:
              id:
                type: integer
              execution_date:
                type: string
                format: date
              tons:
                type: number
                format: float
              establishment_id:
                type: integer
              crop_type:
                type: string
              exercise:
                type: integer
  ### AGRO END
  ### CATTLE BEGIN
  /cattle/summary/:
    get:
      security:
        - Bearer: []
      description: |
        Bovine stock
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Resumen obtenido correctamente
          schema:
            type: object
            properties:
              land_use:
                  type: object
                  properties:
                    series:
                      type: object
                      properties:
                        verdeo:
                          type: array
                          items:
                            type: integer
                        meadows:
                          type: array
                          items:
                            type: integer
                        natural_field:
                          type: array
                          items:
                            type: integer
                        improved_natural_field:
                          type: array
                          items:
                            type: integer
                        renovations:
                          type: array
                          items:
                            type: integer
                    categories:
                      type: array
                      items:
                        type: integer
                    type_graphic:
                      type: string
                    name:
                      type: string
                    yAxis:
                      type: string
              heads:
                  type: object
                  properties:
                    series:
                      type: object
                      properties:
                        toritos:
                          type: array
                          items:
                            type: object
                            properties:
                              cattle_type:
                                type: string
                              stock:
                                type: integer
                        vacas_cria:
                          type: array
                          items:
                            type: object
                            properties:
                              cattle_type:
                                type: string
                              stock:
                                type: integer
                        ovino_1:
                          type: array
                          items:
                            type: object
                            properties:
                              cattle_type:
                                type: string
                              stock:
                                type: integer
                        ovino_2:
                          type: array
                          items:
                            type: object
                            properties:
                              cattle_type:
                                type: string
                              stock:
                                type: integer
                    categories:
                      type: array
                      items:
                        type: integer
                    type_graphic:
                      type: string
                    name:
                      type: string
                    yAxis:
                      type: string
              production:
                  type: object
                  properties:
                    series:
                      type: object
                      properties:
                        vacuno:
                          type: array
                          items:
                            type: integer
                        ovino:
                          type: array
                          items:
                            type: integer
                    categories:
                      type: array
                      items:
                        type: integer
                    type_graphic:
                      type: string
                    name:
                      type: string
                    yAxis:
                      type: string
  /cattle/{cattle_type}/reproductive/:
    get:
      security:
        - Bearer: []
      description: |
        Cattle reproductive stats
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
      responses:
        200:
          description: Historico de reproductivo obtenido ok
          schema:
            type: array
            items:
              $ref: '#/definitions/CattleReproductiveEntry'
    post:
      security:
        - Bearer: []
      description: |
        Cattle reproductive stats
      parameters:
        -
          name: reproductive
          in: body
          required: true
          description: Reproductive Entry info
          schema:
            $ref: '#/definitions/CattleReproductiveEntry'
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
      responses:
        201:
          description: Historico de reproductivo obtenido ok
          schema:
            $ref: '#/definitions/CattleReproductiveEntry'
  /cattle/{cattle_type}/reproductive/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Cattle reproductive stats
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: id
          in: path
          required: true
          description: Historic entry id
          type: integer
        -
          name: reproductive
          in: body
          required: true
          description: Reproductive Entry info
          schema:
            $ref: '#/definitions/CattleReproductiveEntry'
      responses:
        200:
          description: Historico de reproductivo modificado ok
          schema:
            $ref: '#/definitions/CattleReproductiveEntry'
    delete:
      security:
        - Bearer: []
      description: |
        Cattle reproductive stats
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: id
          in: path
          required: true
          description: Historic entry id
          type: integer
      responses:
        204:
          description: Historico de reproductivo eliminado ok
  /cattle/{cattle_type}/movements/:
    get:
      security:
        - Bearer: []
      description: |
        Cattle movements
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: date_from
          in: query
          required: true
          type: string
          format: date
        -
          name: date_to
          in: query
          required: true
          type: string
          format: date
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
      responses:
        200:
          description: Movimientos obtenidos correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                category:
                  type: string
                movement_type:
                  type: string
                quantity:
                  type: integer
                execution_date:
                  type: string
                  format: date
                unit_weight:
                  type: number
                  format: float
                  # required: false
                total_weight:
                  type: number
                  format: float
                  # required: false
                gross_cost:
                  type: number
                  format: float
                  # required: false
                  description: "Importe bruto"
                cost:
                  type: number
                  format: float
                  # required: false
                  description: "Importe neto"
                tax_ammount:
                  type: number
                  format: float
                  # required: false
                extra_expenses:
                  type: number
                  format: float
                  # required: false
                  description: "Gastos de comercializacion"
                imeba:
                  type: number
                  format: float
                  # required: false
                gross_price:
                  type: number
                  format: float
                  # required: false
                  description: "Precio bruto"
                price:
                  type: number
                  format: float
                  # required: false
                  description: "Precio neto"
  /cattle/{cattle_type}/config_weighs/mode/:
    post:
      security:
        - Bearer: []
      description: |
        Blah
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: weigh_defaults
          in: body
          required: true
          description: Blah
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              weighing_yearly:
                type: boolean
      responses:
        204:
          description: Blah
  /cattle/{cattle_type}/config_weighs/defaults/:
    get:
      security:
        - Bearer: []
      description: |
        Blah
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: establishment_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Blah
          schema:
            type: array
            items:
              $ref : '#/definitions/WeighingCategoryConfiguration'
    post:
      security:
        - Bearer: []
      description: |
        Blah
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: weigh_defaults
          in: body
          required: true
          description: Blah
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              weighing_defaults:
                type: array
                items:
                  $ref : '#/definitions/WeighingCategoryConfiguration'
      responses:
        201:
          description: Blah
          schema:
            type: array
            items:
              $ref : '#/definitions/WeighingCategoryConfiguration'
  /cattle/{cattle_type}/weigh/:
    get:
      security:
        - Bearer: []
      description: |
        Blah
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Blah
          schema:
            type: object
            properties:
              weighing_yearly:
                type: boolean
              last_weighings:
                type: array
                items:
                  $ref : '#/definitions/WeighingWStock'
              current_weighings:
                type: array
                items:
                  $ref : '#/definitions/WeighingWStock'
    post:
      security:
        - Bearer: []
      description: |
        Blah
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: weigh
          in: body
          required: true
          description: Blah
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              weighing_yearly:
                type: boolean
      responses:
        201:
          description: Blah
          schema:
            type: array
            items:
              $ref : '#/definitions/WeighingWStock'
  /cattle/{cattle_type}/suggested_weigh/:
    get:
      security:
        - Bearer: []
      description: |
        Blah
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - bovine
          - ovine
          type: string
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: string
          format: date
      responses:
        200:
          description: Blah
          schema:
            type: array
            items:
              type: object
              properties:
                category:
                  type: integer
                weigh:
                  type: number
                  format: float
                quantity:
                  type: integer
  /cattle/{cattle_type}/stock/:
    get:
      security:
        - Bearer: []
      description: |
        Bovine stock
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: date_from
          in: query
          required: true
          type: string
          format: date
        -
          name: date_to
          in: query
          required: true
          type: string
          format: date
        -
          name: reduced
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Stock obtenido correctamente
          schema:
            type: array
            items:
              $ref : '#/definitions/CattleStock'
  /cattle/{cattle_type}/birth/:
    post:
      security:
        - Bearer: []
      description: |
        Birth movement for bovine cattle
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: births
          in: body
          required: true
          description: Birth info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              birth_list:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: integer
                    quantity:
                      type: integer
                    execution_date:
                      type: string
                      format: date
      responses:
        201:
          description: Movimientos creados correctamente
  /cattle/{cattle_type}/death/:
    post:
      security:
        - Bearer: []
      description: |
        Death movement for bovines
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: deaths
          in: body
          required: true
          description: Deaths info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              death_list:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: integer
                    quantity:
                      type: integer
                    execution_date:
                      type: string
                      format: date
      responses:
        201:
          description: Movimientos creados correctamente
  /cattle/{cattle_type}/adjust/:
    post:
      security:
        - Bearer: []
      description: |
        Adjust movement for bovines
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: adjust
          in: body
          required: true
          description: Adjust info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              category:
                type: integer
              quantity:
                type: integer
              execution_date:
                type: string
                format: date
              reason:
                type: integer
      responses:
        201:
          description: Movimiento creados correctamente
  /cattle/{cattle_type}/category_change/:
    post:
      security:
        - Bearer: []
      description: |
        Category change movement for bovines
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: change
          in: body
          required: true
          description: Category change info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              category:
                type: integer
              quantity:
                type: integer
              execution_date:
                type: string
                format: date
              destination_category:
                type: integer
      responses:
        201:
          description: Movimiento creado correctamente
  /cattle/{cattle_type}/consumption/:
    post:
      security:
        - Bearer: []
      description: |
        Consumption movement for bovines
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: consume
          in: body
          required: true
          description: Category change info
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              category:
                type: integer
              quantity:
                type: integer
              execution_date:
                type: string
                format: date
              unit_weight:
                type: number
                format: float
              unit_price:
                type: number
                format: float
              first_plan:
                type: string
              second_plan:
                type: string
              investment_id:
                type: integer
      responses:
        201:
          description: Movimiento creado correctamente
  /cattle/{cattle_type}/indicators/:
    get:
      security:
        - Bearer: []
      description: |
        Cattle indicators
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: exercise
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Stock obtenido correctamente
          schema:
            type: object
            properties:
              table_for_export:
                type: array
                items:
                  type: array
                  items:
                    type: string
              kg_ug:
                $ref: '#/definitions/DoubleGraphic'
              heads:
                $ref: '#/definitions/DoubleGraphic'
              production:
                type: object
                properties:
                  series:
                    type: object
                    properties:
                      production:
                        type: array
                        items:
                          type: integer
                  categories:
                    type: array
                    items:
                      type: integer
                  type_graphic:
                        type: string
                  name:
                    type: string
    post:
      security:
        - Bearer: []
      description: |
        Cattle indicators
      parameters:
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: weighs
          in: body
          required: true
          schema:
            type: object
            properties:
              establishment_id:
                type: integer
              date_to:
                type: string
                format: date
              weighs:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: integer
                    weight:
                      type: number
                      format: float
      responses:
        200:
          description: Stock obtenido correctamente
          schema:
            type: object
            properties:
              kg_ug:
                $ref: '#/definitions/DoubleGraphic'
              heads:
                $ref: '#/definitions/DoubleGraphic'
              production:
                type: object
                properties:
                  series:
                    type: object
                    properties:
                      production:
                        type: array
                        items:
                          type: integer
                  categories:
                    type: array
                    items:
                      type: integer
                  type_graphic:
                        type: string
                  name:
                    type: string

  ### CATTLE END
  ### LABOUR BEGIN
  /labours/:
    get:
      security:
        - Bearer: []
      description: |
        Gets labours inventory summary
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
        -
          name: date_from
          in: query
          required: true
          type: string
          format: date
        -
          name: date_to
          in: query
          required: true
          type: string
          format: date
      responses:
        200:
          description: Labores obtenidas correctamente
          schema:
            type: object
            properties:
              filters:
                type: object
                properties:
                  lots:
                    type: array
                    items:
                      type: string
                  execution_stages:
                    type: array
                    items:
                      type: string
                  crops:
                    type: array
                    items:
                      type: string
                  labour_types:
                    type: array
                    items:
                      type: string
              labours:
                type: array
                items:
                  $ref : "#/definitions/LaboursListItem"
    post:
      security:
        - Bearer: []
      description: |
        Creates a new labour
      parameters:
        -
          name: labour
          in: body
          required: true
          schema:
            $ref : "#/definitions/Labour"
      responses:
        201:
          description: Labor creada correctamente
          schema:
            $ref : "#/definitions/LaboursListItem"
  /labours/{id}/notes/:
    post:
      security:
        - Bearer: []
      description: |
        Creates a new labour note
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: labour_note
          in: body
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      responses:
        204:
          description: Nota agregada Ok
  /labours/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Creates a new labour
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: labour
          in: body
          required: true
          schema:
            $ref: "#/definitions/LabourPATCH"
      responses:
        204:
          description: Stock obtenido correctamente
          schema:
            $ref : "#/definitions/LabourDetail"
    get:
      security:
        - Bearer: []
      description: |
        Shows labour
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Stock obtenido correctamente
          schema:
            $ref : "#/definitions/LabourDetail"
  /labours/finalize/:
    get:
      security:
        - Bearer: []
      description: |
        Gets labours info
      parameters:
        -
          name: labours
          in: query
          required: true
          type: array
          items:
            type: integer
      responses:
        200:
          description: Labores obtenidas correctamente
          schema:
            $ref : "#/definitions/LaboursToEnd"
    post:
      security:
        - Bearer: []
      description: |
        Finalizes labours
      parameters:
        -
          name: labours
          in: body
          required: true
          schema:
            $ref: "#/definitions/LaboursEnd"
      responses:
        204:
          description: Labores obtenidas correctamente
  /labours/cancel/:
    post:
      security:
        - Bearer: []
      description: |
        Cancellates a labour
      parameters:
        -
          name: labours
          in: body
          required: true
          schema:
            type: object
            properties:
              labours:
                type: array
                items:
                  type: integer
              cancellation_date:
                type: string
                format: date
              note:
                type: string
      responses:
        204:
          description: Labores canceladas correctamente
  /labours/inventory_summary/:
    get:
      security:
        - Bearer: []
      description: |
        Gets labours inventory summary
      parameters:
        -
          name: labours
          in: query
          required: true
          type: array
          items:
            type: integer
        -
          name: establishment_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Labores obtenidas correctamente
          schema:
            type: array
            items:
              $ref : "#/definitions/LaboursInventorySummary"
  /labours/tecno_pkg/:
    get:
      security:
        - Bearer: []
      description: |
        Lista los paquetes tecnológicos
      parameters:
        -
          name: establishment_id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: Paquetes obtenidos Ok
          schema:
            type: object
            properties:
              owned:
                type: array
                items:
                  $ref : "#/definitions/TecnoPackageBrief"
              globals:
                type: array
                items:
                  $ref : "#/definitions/TecnoPackageBrief"
    post:
      security:
        - Bearer: []
      description: |
        Crea un nuevo paquete tecnológico
      parameters:
        -
          name: tecno_pkg
          in: body
          required: true
          schema:
            $ref : "#/definitions/TecnoPackagePOST"
      responses:
        201:
          description: Labor creada correctamente
          schema:
            $ref : "#/definitions/TecnoPackageDetail"
  /labours/tecno_pkg/{id}/:
    patch:
      security:
        - Bearer: []
      description: |
        Modifica un pquete
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: tecno_pkg
          in: body
          required: true
          schema:
            $ref: "#/definitions/TecnoPackagePOST"
      responses:
        200:
          description: Paquete modificado Ok
          schema:
            $ref : "#/definitions/TecnoPackageDetail"
    delete:
      security:
        - Bearer: []
      description: |
        Detalla paquete tecnológico
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        204:
          description: Paquete borrado Ok
    get:
      security:
        - Bearer: []
      description: |
        Detalla paquete tecnológico
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Paquete obtenido Ok
          schema:
            $ref : "#/definitions/TecnoPackageDetail"
  /labours/tecno_pkg/{id}/apply/:
    patch:
      security:
        - Bearer: []
      description: |
        Crea los labores según el paquete
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: tecno_pkg
          in: body
          required: true
          schema:
            type: object
            properties:
              is_global_pkg:
                type: boolean
              establishment_id:
                type: integer
              land_uses:
                type: array
                items:
                  type:
                    integer
      responses:
        200:
          description: Paquete modificado Ok
          schema:
            $ref : "#/definitions/TecnoPackageDetail"
  ### LABOUR END
  ### FIN_DE_EJERCICIO
  /perform_period/:
    get:
      security:
        - Bearer: []
      description: |
        Lista ejercicios y su estado
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref : "#/definitions/PerfomrPeriodDetail"
  /perform_period/{id}/notes/:
    get:
      security:
        - Bearer: []
      description: |
        Lista notas de un ejercicio
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref : "#/definitions/ClosingProcessNote"
    post:
      security:
        - Bearer: []
      description: |
        Crea una nota de un ejercicio
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: note
          in: body
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
      responses:
        201:
          description: Ok
          schema:
            $ref : "#/definitions/ClosingProcessNote"
  /perform_period/{id}/review/:
    patch:
      security:
        - Bearer: []
      description: |
        Permite enviara revisión un ejercicio. Solo para productores
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref : "#/definitions/PerfomrPeriodDetail"
  /perform_period/{id}/close/:
    patch:
      security:
        - Bearer: []
      description: |
        Permite cerrar un ejercicio. Solo para asesores
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: period
          in: body
          required: true
          schema:
            type: object
            properties:
              confirm_close:
                type: boolean
      responses:
        200:
          description: Ok
          schema:
            type: array
            items:
              $ref : "#/definitions/PerfomrPeriodDetail"
  /perform_period/{id}/rainfalls/:
    post:
      security:
        - Bearer: []
      description: |
        Sets
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: rainfalls
          in: body
          required: true
          schema:
            $ref: "#/definitions/ExerciseRainfalls"
      responses:
        201:
          description: Precipitaciones almacenadas correctamente
  /perform_period/{id}/information_status/:
    get:
      security:
        - Bearer: []
      description: |
        Returns information status for closing exercise
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Informacion obtenida correctamente
          schema:
            $ref : "#/definitions/InformationStatus"
  /perform_period/{id}/general_indicators/:
    get:
      security:
        - Bearer: []
      description: |
        Returns general indicators
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
            $ref : "#/definitions/GeneralIndicators"
    post:
      security:
        - Bearer: []
      description: |
        Stores general indicators
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: indicators
          in: body
          required: true
          schema:
            $ref : "#/definitions/POSTGeneralIndicators"
      responses:
        201:
          description: Indicadores almacenados con exito
  /perform_period/{id}/consumptions/change_plan/:
    patch:
      security:
        - Bearer: []
      description: |
        Cambia los planes de cuenta de todos los movimientos especificados al plan de cuentas dado por parámetro
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: consumption
          in: body
          required: true
          schema:
            type: object
            properties:
              movements:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    movement_type:
                      type: string
              first_plan:
                type: string
              second_plan:
                type: string
              investment_id:
                type: integer
      responses:
        200:
          description: Nothing to say

  /perform_period/{id}/labours/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            $ref : "#/definitions/LabourExerciseValidations"

  /perform_period/{id}/cattle/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            properties:
              horse_errors:
                $ref : "#/definitions/CattleExerciseValidations"
              bovine_errors:
                $ref : "#/definitions/CattleExerciseValidations"
              ovine_errors:
                $ref : "#/definitions/CattleExerciseValidations"

  /perform_period/{id}/land_uses/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            $ref : "#/definitions/LandUseExerciseValidations"

  /perform_period/{id}/inventory/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            $ref : "#/definitions/InventoryExerciseValidations"

  /perform_period/{id}/savings_banks/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            $ref : "#/definitions/BanksExerciseValidations"

  /perform_period/{id}/tickets/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            $ref : "#/definitions/TicketExerciseValidations"

  /perform_period/{id}/agro/validate_close/:
    get:
      security:
        - Bearer: []
      description: |
        Validates exercise for closing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            $ref : "#/definitions/AgroExerciseValidations"

  /perform_period/{id}/agro/exercise_costs/:
    get:
      security:
        - Bearer: []
      description: |
        Returns exercise costs
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Costos obtenidos correctamente
          schema:
            $ref : "#/definitions/AgroExerciseCost"
    post:
      security:
        - Bearer: []
      description: |
        Sets exercise crop costs
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: land_uses
          in: body
          required: true
          description: Adjust mov info
          schema:
            type: array
            items:
              type: object
              properties:
                crop_id:
                  type: integer
                harvested_percentage:
                  type: integer
      responses:
        204:
          description: Costos asignados correctamente

  /perform_period/{id}/agro/pricings/:
    get:
      security:
        - Bearer: []
      description: |
        Returns stock pricing for agro
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                crop_type:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                current_stock:
                  type: integer
                unit_price:
                  type: number
                  format: float
    post:
      security:
        - Bearer: []
      description: |
        Stores agro end of exercise pricing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: pricings
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                crop_type:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        204:
          description: Valoracion guardada correctamente

  /perform_period/{id}/cattle/{cattle_type}/pricings/:
    get:
      security:
        - Bearer: []
      description: |
        Returns stock pricing for cattle
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
      responses:
        200:
          description: Valoracion obtenida correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                category_name:
                  type: string
                category_id:
                  type: integer
                current_stock:
                  type: integer
                weight:
                  type: number
                  format: float
                unit_price:
                  type: number
                  format: float
    post:
      security:
        - Bearer: []
      description: |
        Stores cattle end of exercise pricing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: cattle_type
          in: path
          required: true
          enum:
          - horse
          - bovine
          - ovine
          type: string
        -
          name: pricings
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                category:
                  type: integer
                price:
                  type: number
                  format: float
      responses:
        204:
          description: Valoracion almacenada correctamente

  /perform_period/{id}/cattle/ovine/wool_indicators/:
    get:
      security:
        - Bearer: []
      description: |
        Returns wool indicators
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
            type: object
            properties:
              initial_stock:
                type: integer
              ammount:
                type: number
                format: float
              tax_ammount:
                type: number
                format: float
              imeba:
                type: number
                format: float
              extra_expenses:
                type: number
                format: float
    post:
      security:
        - Bearer: []
      description: |
        Stores wool indicators
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: indicators
          in: body
          required: true
          schema:
            type: object
            properties:
              sold_wool_kg:
                type: number
                format: float
              wool_exercise_production:
                type: number
                format: float
              stock_value:
                type: number
                format: float
              sheared_quantity:
                type: integer
      responses:
        204:
          description: Indicadores almacenados con exito
          
  /perform_period/{id}/cattle/ovine/initial_wool_indicators/:
    get:
      security:
        - Bearer: []
      description: |
        Returns wool indicators
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Indicadores obtenidos correctamente
          schema:
            type: object
            properties:
              initial_stock:
                type: integer
              wool_kg_price:
                type: integer
    post:
      security:
        - Bearer: []
      description: |
        Stores wool indicators
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: indicators
          in: body
          required: true
          schema:
            type: object
            properties:
              initial_stock:
                type: integer
              wool_kg_price:
                type: integer
      responses:
        204:
          description: Indicadores almacenados con exito          

  /perform_period/{id}/inventory/services/pricings/:
    get:
      security:
        - Bearer: []
      description: |
        Returns stock pricing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                service:
                  type: object
                  properties:
                    id:
                      type: integer
                    description:
                      type: string
                current_stock:
                  type: integer
                unit_price:
                  type: number
                  format: float
                category:
                  type: string
    post:
      security:
        - Bearer: []
      description: |
        Stores services end of exercise pricing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: pricings
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                service_id:
                  type: integer
                price:
                  type: number
                  format: float
      responses:
        204:
          description: Valoracion agregada con exito

  /perform_period/{id}/inventory/supplies/pricings/:
    get:
      security:
        - Bearer: []
      description: |
        Returns stock pricing for supplies
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Validacion realizada correctamente
          schema:
            type: array
            items:
              type: object
              properties:
                supply:
                  type: object
                  properties:
                    id:
                      type: integer
                    description:
                      type: string
                current_stock:
                  type: integer
                unit_price:
                  type: number
                  format: float
                category:
                  type: string
    post:
      security:
        - Bearer: []
      description: |
        Stores supplies end of exercise pricing
      parameters:
        -
          name: id
          in: path
          required: true
          type: integer
        -
          name: pricings
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                supply_id:
                  type: integer
                price:
                  type: number
                  format: float
      responses:
        204:
          description: Valoracion agregada con exito

  ### FIN_DE_EJERCICIO END
  ### GIS WSs
  /gis/encode_kml/:
    get:
      description: |
        Se le envia una geojson y retorna el mismo como un archivo en KML, donde el Id de cada particion se transforma en el nombre de cada placeholder. Puede incluir cierta metadata en ExtraData.
        Debe ser compatible con los KML creados por google-earth (pero no compatible con todos los KML que google-earth puede levantar, en caso de problemas cargar este KML en google-earth y volver a exportarlo, como modo de normalizacion).
        Si varios placeholders del KML tienen igual nombre, estos se fundiran y se interpretaran como una sola cosa.
      consumes:
        - application/json
      produces:
        - application/vnd.google-earth.kml+xml
      parameters:
        -
          name: shapes
          in: body
          description: Shapes
          required: true
          schema:
            $ref: '#/definitions/GEOJsonFeatureCollection'
      responses:
        200:
          description: Traducción a GeoJson OK
          schema:
            type: file
  /gis/decode_kml/:
    post:
      description: |
        Translates a KML file to a GEOJsonFeatureCollection object.
        No changes in BD are maded.
        Keeps metadata in each KML's Placeholder.ExtraData translated into the properties object of each GEOJsonFeature in response.
        Uses each KML placeholder.name tag as each feature id.
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        -
          name: kml_file
          in: formData
          description: El archivo KML a interpretar
          required: true
          type: file
      responses:
        200:
          description: 'KML traducido OK'
          schema:
            $ref: '#/definitions/GEOJsonFeatureCollection'
  /gis/decode_kml_single/:
    post:
      description: |
        Translates a KML file to a GEOJsonFeature object.
        No changes in BD are maded.
        Keeps metadata in the KML's ExtraData translated in the properties object of the response GEOJsonFeature.
        Meld all the geometries as one.
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        -
          name: kml_file
          in: formData
          description: El archivo KML a interpretar
          required: true
          type: file
      responses:
        200:
          description: 'KML traducido OK'
          schema:
            $ref: '#/definitions/GEOJsonFeatureCollection'
  /gis/partition_creation/:
    get:
      description: |
        Crea fundiendo y cortando una nueva particion definida por el poligono de entrada "blade". Roba superficie de cualquier otra particion con la que pudiera intersectarse
        Retorna el conjunto de todas las particiones nuevas (incluso las particiones vacias de Id ya existentes como collecciones vacias).
        Puede crear nuevas particiones si el Id del blade no se encontraba entre las particiones.
        Ver posibles zoom en https://developers.google.com/maps/documentation/static-maps/intro#Zoomlevels'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: gis params
          in: body
          description: gis params
          required: true
          schema:
            type: object
            properties:
              zoom_lvl:
                type: number
              blade:
                $ref: '#/definitions/GEOJsonFeature'
              shapes:
                $ref: '#/definitions/GEOJsonFeatureCollection'
      responses:
        200:
          description: Conjunto de particiones luego de fundir, Simplificar y normalizar las diferentes particiones de entrada segun el blade. Trae además un valor en properties llamado area_relation para cada feature f_i resultante que representa area_de_f_i/suma de todas las areas, sobre las features de la respuesta.
          schema:
            $ref: '#/definitions/GEOJsonFeatureCollection'
          examples:
            {
              "request": {
                "zoom_lvl": 11.5,
                "shapes": {
                  "type": "FeatureCollection",
                  "features": [
                    {
                      "geometry": {
                        "type": "MultiPolygon",
                        "coordinates": [
                          [
                            [
                              [40, 70],
                              [40, 74],
                              [44, 74],
                              [44, 70],
                              [40, 70]
                            ]
                          ]
                        ]
                      },
                      "type": "Feature",
                      "properties": {
                        "id": "2"
                      }
                    },
                    {
                      "geometry": {
                        "type": "MultiPolygon",
                        "coordinates": [
                          [
                            [
                              [40, 70],
                              [50, 70],
                              [50, 80],
                              [40, 80],
                              [40, 70]
                            ]
                          ]
                        ]
                      },
                      "type": "Feature",
                      "properties": {
                        "id": "1",
                        "otra_prop_a_mantener": 567
                      }
                    }
                  ]
                },
                "blade": {
                  "geometry": {
                    "type": "MultiPolygon",
                    "coordinates": [
                      [
                        [
                          [40, 70],
                          [42, 70],
                          [42, 74],
                          [40, 74],
                          [40, 70]
                        ]
                      ]
                    ]
                  },
                  "type": "Feature",
                  "properties": {
                    "prop_que_se_ignora_a_menos_que_pida_un_nuevo_id": 1234
                  }
                }
              },
              "response": {
                "type": "FeatureCollection",
                "features": [
                  {
                    "geometry": {
                      "type": "MultiPolygon",
                      "coordinates": [
                        [
                          [
                            [40, 70],
                            [40, 74],
                            [44, 74],
                            [44, 70],
                            [40, 70]
                          ]
                        ]
                      ]
                    },
                    "type": "Feature",
                    "properties": {
                      "id": "2",
                      "area_relation": 0.5
                    }
                  },
                  {
                    "geometry": {
                      "type": "MultiPolygon",
                      "coordinates": [
                        [
                          [
                            [40, 70],
                            [50, 70],
                            [50, 80],
                            [40, 80],
                            [40, 70]
                          ]
                        ]
                      ]
                    },
                    "type": "Feature",
                    "properties": {
                      "id": "1",
                      "area_relation": 0.2,
                      "otra_prop_a_mantener": 567
                    }
                  },
                  {
                    "geometry": {
                      "type": "MultiPolygon",
                      "coordinates": [
                        [
                          [
                            [40, 70],
                            [50, 70],
                            [50, 80],
                            [40, 80],
                            [40, 70]
                          ]
                        ]
                      ]
                    },
                    "type": "Feature",
                    "properties": {
                      "id": "12",
                      "area_relation": 0.3,
                      "prop_que_se_ignora_a_menos_que_pida_un_nuevo_id": 1234
                    }
                  }
                ]
              }
            }
  ### GIS WSs END
definitions:
  ### AUX definitions:
  CatalogEntryT1:
    type: object
    properties:
      value:
        type: string
      description:
        type: string
  CatalogEntryT2:
    type: object
    properties:
      value:
        type: integer
      description:
        type: string
  CatalogEntryT3:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  DoubleGraphic:
    type: object
    properties:
      type_graphic:
        type: string
      name:
        type: string
      yAxis:
        type: array
        items:
          type: string
      categories:
        type: array
        items:
          type: string
      series:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            data:
              type: array
              items:
                type: number
                format: float
  # SimpleGraphic:
  #   type: object
  #   properties:
  #     series:
  #       type: object
  #       properties:
  #         depreciation:
  #           type: array
  #           items:
  #             type: integer
  #     categories:
  #       type: array
  #       items:
  #         type: integer
  #     type_graphic:
  #       type: string
  #     name:
  #       type: string
  #     yAxis:
  #       type: string
  ### AUX DEFINITIONS END
  ### USERS definitions:
  Permissions:
    type: integer
  Profile:
    type: object
    properties:
      name:
        type: string
      departament:
        type: integer
      phone_number:
        type: string
      address:
        type: string
  User:
    type: object
    properties:
      profile:
        $ref: '#/definitions/Profile'
      username:
        type: string
      email:
        type: string
      role:
        enum:
          - ADMINISTRADOR
          - ADMINISTRATIVO SISTEMA
          - ASESOR
          - PRODUCTOR
          - ADMINISTRATIVO PRODUCTOR
          - INVITADO
        type: string
      temporary:
        type: boolean
      end_date:
        type: string
        format: date
      permissions:
        type: object
        properties:
          indicators:
            type: object
            properties:
              summary:
                $ref: '#/definitions/Permissions'
              management:
                $ref: '#/definitions/Permissions'
              sustentability:
                $ref: '#/definitions/Permissions'
              margin:
                $ref: '#/definitions/Permissions'
              detail:
                $ref: '#/definitions/Permissions'
      establishments:
        type: array
        items:
          type: integer
  UserPOST:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      role:
        enum:
          - ADMINISTRADOR
          - ADMINISTRATIVO SISTEMA
          - ASESOR
          - PRODUCTOR
          - ADMINISTRATIVO PRODUCTOR
          - INVITADO
        type: string
      end_date:
        type: string
        format: date
      permissions:
        type: object
        properties:
          indicators:
            type: object
            properties:
              summary:
                $ref: '#/definitions/Permissions'
              management:
                $ref: '#/definitions/Permissions'
              sustentability:
                $ref: '#/definitions/Permissions'
              margin:
                $ref: '#/definitions/Permissions'
              detail:
                $ref: '#/definitions/Permissions'
      establishments:
        type: array
        items:
          type: integer
      password:
        type: string
  UserPATCH:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      role:
        enum:
          - ADMINISTRADOR
          - ADMINISTRATIVO SISTEMA
          - ASESOR
          - PRODUCTOR
          - ADMINISTRATIVO PRODUCTOR
          - INVITADO
        type: string
      end_date:
        type: string
        format: date
      permissions:
        type: object
        properties:
          indicators:
            type: object
            properties:
              summary:
                $ref: '#/definitions/Permissions'
              management:
                $ref: '#/definitions/Permissions'
              sustentability:
                $ref: '#/definitions/Permissions'
              margin:
                $ref: '#/definitions/Permissions'
              detail:
                $ref: '#/definitions/Permissions'
      establishments:
        type: array
        items:
          type: integer
  UserSensitiveInfo:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
  UserUnsensitiveInfo:
    type: object
    properties:
      name:
        type: string
      departament:
        type: integer
      phone_number:
        type: string
      address:
        type: string
  UserLogin:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      email:
        type: string
      role:
        type: string
        enum:
          - ADMINISTRADOR
          - ADMINISTRATIVO SISTEMA
          - ASESOR
          - PRODUCTOR
          - ADMINISTRATIVO PRODUCTOR
          - INVITADO
      temporary:
        type: boolean
      end_date:
        type: string
        format: date
      permissions:
        type: object
        properties:
          indicators:
            type: object
            properties:
              summary:
                $ref: '#/definitions/Permissions'
              comparative:
                $ref: '#/definitions/Permissions'
              sustentability:
                $ref: '#/definitions/Permissions'
              margin:
                $ref: '#/definitions/Permissions'
              details:
                $ref: '#/definitions/Permissions'
      establishments:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
      name:
        type: string
      departament:
        type: integer
      phone_number:
        type: string
      address:
        type: string
  UserFormList:
    type: object
    properties:
      departaments:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT1'
      roles:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      permissions:
        type: object
        properties:
          summary:
            type: object
            properties:
              description:
                type: string
              values:
                type: object
                properties:
                  sin_permiso:
                    type: integer
                  puede_ver:
                    type: integer
                  puede_editar:
                    type: integer
  ### USERS DEFINITIONS END
  ### ADMINISTRATION DEFINITIONS
  Establishment:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      active:
        type: boolean
      crea_group:
        $ref: '#/definitions/CreaGroup'
      coneat:
        type: integer
      location:
        type: object
        properties:
          latitude:
            type: number
            format: float
          longitude:
            type: number
            format: float
      share_fucrea:
        type: boolean
      share_group:
        type: boolean
      initilization_stage:
        enum:
            - initialized
            - uninitialized
        type: string
      padrons:
        type: array
        items:
          $ref: '#/definitions/Padron'
      lots:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
      characterizations:
        type: array
        items:
          $ref: '#/definitions/CharacterizationPOSTList'
  EstablishmentPATCH:
    type: object
    properties:
      name:
        type: string
      active:
        type: boolean
      coneat:
        type: integer
      location:
        type: object
        properties:
          latitude:
            type: number
            format: float
          longitude:
            type: number
            format: float
      share_fucrea:
        type: boolean
      share_group:
        type: boolean
      padrons:
        type: array
        items:
          $ref: '#/definitions/PadronPATCH'
      zone:
        type: integer
  EstablishmentBrief:
    type: object
    properties:
      company:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          establishments:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                closed_exercises:
                  type: array
                  items:
                    type: integer
  CharacterizationPOSTList:
    type: object
    properties:
      agriculture:
        type: array
        items:
          type: integer
      sistema_producto_vacuno:
        type: array
        items:
          type: integer
      sistema_producto_ovino:
        type: array
        items:
          type: integer
      forestacion_comercial:
        type: array
        items:
          type: integer
      evolucion_propiedad_empresas_familiares:
        type: array
        items:
          type: integer
      edad_decisor:
        type: array
        items:
          type: integer
      riego:
        type: array
        items:
          type: integer
      nivel_instruccion_decisor:
        type: array
        items:
          type: integer
      residencia_decisor:
        type: array
        items:
          type: integer
      dias_semana_decisor:
        type: array
        items:
          type: integer
      geographic_zone:
        type: array
        items:
          type: integer
          description: "Applies only in indicators filtering"
      category:
        type: array
        items:
          type: integer
  Characterization:
    type: object
    properties:
      agriculture:
        type: integer
      sistema_producto_vacuno:
        type: integer
      sistema_producto_ovino:
        type: integer
      forestacion_comercial:
        type: integer
      evolucion_propiedad_empresas_familiares:
        type: integer
      edad_decisor:
        type: integer
      riego:
        type: integer
      nivel_instruccion_decisor:
        type: integer
      residencia_decisor:
        type: integer
      dias_semana_decisor:
        type: integer
      geographic_zone:
        type: integer
      category:
        type: integer
  IndicatorFilterPOSTList:
    type: object
    properties:
      comparative_group:
        type: integer
      ordering_type:
        type: integer
      indicator:
        type: object
        properties:
          type:
            type: string
          name:
            type: string
  CharacterizationFormList:
    type: object
    properties:
      agriculture:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      sistema_producto_vacuno:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      sistema_producto_ovino:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      forestacion_comercial:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      evolucion_propiedad_empresas_familiares:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      riego:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      nivel_instruccion_decisor:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      residencia_decisor:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      dias_semana_decisor:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      geographic_zone:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      category:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
  IndicatorFilterFormList:
    type: object
    properties:
      closed_exercises:
        type: array
        items:
          type: integer
      indicator_types:
        $ref: '#/definitions/CatalogEntryT2'
      filters:
        type: object
        properties:
          comparative_groups:
            type: array
            items:
              $ref: '#/definitions/CatalogEntryT2'
          ordering_type:
            type: array
            items:
              $ref: '#/definitions/CatalogEntryT2'
          indicators:
            type: array
            items:
              type: object
              properties:
                value:
                  type: integer
                description:
                  type: string
                type:
                  type: string
                type_description:
                  type: string
                kindof:
                  type: integer
  CropTypeFormList:
    type: array
    items:
      $ref: '#/definitions/CatalogEntryT2'
  CharacterizationsAndFiltersFormList:
    type: object
    properties:
      characterizations_names:
        type: object
        properties:
          agriculture:
            type: string
          edad_decisor:
            type: string
          sistema_producto_vacuno:
            type: string
          sistema_producto_ovino:
            type: string
          nivel_instruccion_decisor:
            type: string
          residencia_decisor:
            type: string
          dias_semana_decisor:
            type: string
          riego:
            type: string
          forestacion_comercial:
            type: string
          evolucion_propiedad_empresas_familiares:
            type: string
          category:
            type: string
      characterizations:
        $ref: '#/definitions/CharacterizationFormList'
      zones:
        $ref: '#/definitions/CatalogEntryT1'
  Lot:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      description:
        type: string
      code:
        type: string
      area:
        type: number
        format: float
      productive_area:
        type: number
        format: float
      coneat:
        type: integer
      posession:
        enum:
          - PROPIO
          - AJENO
        type: string
      leasing:
        type: object
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          cost:
            type: number
            format: float
  # LotPOST:
  #   type: object
  #   properties:
  #     description:
  #       type: string
  #     code:
  #       type: string
  #     area:
  #       type: number
  #       format: float
  #     productive_area:
  #       type: number
  #       format: float
  #     coneat:
  #       type: integer
  #     posession:
  #       enum:
  #         - PROPIO
  #         - AJENO
  #       type: string
  #     leasing:
  #       type: object
  #       properties:
  #         start_date:
  #           type: string
  #           format: date
  #         end_date:
  #           type: string
  #           format: date
  #         cost:
  #           type: number
  #           format: float
  LotPATCH:
    type: object
    properties:
      description:
        type: string
      code:
        type: string
      area:
        type: number
        format: float
      productive_area:
        type: number
        format: float
      coneat:
        type: integer
      posession:
        enum:
          - PROPIO
          - AJENO
        type: string
      leasing:
        type: object
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          cost:
            type: number
            format: float
  LotInEstablishmentPOST:
    type: object
    properties:
      geofence:
        $ref: '#/definitions/GEOJson'
      description:
        type: string
      code:
        type: string
      area:
        type: number
        format: float
      productive_area:
        type: number
        format: float
      coneat:
        type: integer
      posession:
        enum:
          - PROPIO
          - AJENO
        type: string
      leasing:
        type: object
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          cost:
            type: number
            format: float
  CreaGroup:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      name:
        type: string
      establishments:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
  CreaGroupDeep:
    type: object
    properties:
      crea_group:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          establishments:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                closed_exercises:
                  type: array
                  items:
                    type: integer
  Company:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      fantasy_name:
        type: string
      business_name:
        type: string
      rut:
        type: string
      establishments:
        type: array
        items:
          type: integer
  CompanyPOST:
    type: object
    properties:
      fantasy_name:
        type: string
      business_name:
        type: string
      rut:
        type: string
      establishments:
        type: array
        items:
          type: integer
  Department:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  Padron:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      padron_number:
        type: string
      department:
        $ref: '#/definitions/Department'
  PadronPATCH:
    type: object
    properties:
      padron_number:
        type: string
      department:
        type: integer
  Provider:
    type: object
    properties:
      id:
        type: integer
      fantasy_name:
        type: string
      business_name:
        type: string
      rut:
        type: string
      establishments:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
  ProviderPOST:
    type: object
    properties:
      id:
        type: integer
      fantasy_name:
        type: string
      business_name:
        type: string
      rut:
        type: string
      establishments:
        type: array
        items:
          type: integer
  ProviderPATCH:
    type: object
    properties:
      fantasy_name:
        type: string
      business_name:
        type: string
      rut:
        type: string
      type:
        type: integer
  ### ADMINISTRATION DEFINITIONS END
  ### INDICATORS DEFINITIONS
  IndicatorTree:
    type: object
    properties:
      indicators_compared:
        type: integer
      indicators_list:
        type: array
        items:
          type: object
          properties:
            tree:
              type: object
              properties:
                name:
                  type: string
                short_name:
                  type: string
                value:
                  type: number
                  format: float
                children:
                  type: array
                  items:
                    $ref: '#/definitions/IndicatorTree'
            indicators_quantity:
              type: integer
  IndicatorDetailList:
    type: object
    properties:
      comparative:
        type: object
        properties:
          description:
            type: string
      indicators:
        type: object
        properties:
          producto_bruto_total:
            type: number
            format: float
          producto_bruto_vacuno:
            type: number
            format: float
      date_consulted:
        type: string
        format: date
      indicators_compared:
        type: integer
      id:
        type: string
  ### INDICATORS DEFINITIONS END
  ### LAND USE DEFINITIONS
  MonthlyLandUse:
    type: object
    properties:
      lot:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          hectares:
            type: integer
      establishment:
        type: string
      land_uses:
        type: array
        items:
          type: object
          properties:
              month:
                type: integer
              has_error:
                type: boolean
              crops:
                type: array
                items:
                  type: object
                  properties:
                    crop_id:
                      type: integer
                    crop_name:
                      type: string
                    duration:
                      type: integer
                    hectares:
                      type: integer
                    description:
                      type: string
                    warning_labour_on_delete:
                      type: boolean
                    warning_harvest_on_delete:
                      type: boolean
              closed:
                type: boolean
  CropCatalog:
    allOf:
    - $ref: "#/definitions/CatalogEntryT1"
    - properties:
        children:
          type: array
          items:
            $ref: '#/definitions/CropCatalog'
  LandUseFormList:
    type: object
    properties:
      months:
        type: array
        items:
          $ref: '#/definitions/CatalogEntryT2'
      crops:
        type: array
        items:
          $ref: '#/definitions/CropCatalog'
  LandUseByLot:
    type: object
    properties:
      lot_description:
        type: string
      lot_id:
        type: integer
      land_uses:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            id:
              type: integer
            area:
              type: number
              format: float
            crop:
              type: string
            start_date:
              type: string
              format: date
            end_date:
              type: string
              format: date
  LandUseSequence:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      area:
        type: number
        format: float
      lot:
        type: object
        properties:
          code:
            type: string
          id:
            type: integer
      crop:
        type: object
        properties:
          name:
            type: string
          id:
            type: integer
      starting_date:
        type: string
        format: date
      ending_date:
        type: string
        format: date
  LandUseExerciseValidations:
    type: object
    properties:
      errors:
        type: object
        properties:
          area_errors:
            type: object
            properties:
              description:
                type: string
              land_uses:
                type: array
                items:
                  type: boolean
          cost_errors:
            type: array
            items:
              type: object
              properties:
                category:
                  type: string
                movement_id:
                  type: integer
                description:
                  type: string
                crop:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                cost:
                  type: number
                  format: float
                execution_date:
                  type: string
                  format: date
      warnings:
        type: object
        properties:
          harvest_warnings:
            type: array
            items:
              type: object
              properties:
                description:
                  type: string
                crop:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                area:
                  type: number
                  format: float
                end_date:
                  type: string
                  format: date
                sowing_date:
                  type: string
                  format: date
                harvest_date:
                  type: string
                  format: date
                start_date:
                  type: string
                  format: date
          sow_warnings:
            type: array
            items:
              type: object
              properties:
                description:
                  type: string
                crop:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                area:
                  type: number
                  format: float
                end_date:
                  type: string
                  format: date
                sowing_date:
                  type: string
                  format: date
                harvest_date:
                  type: string
                  format: date
                start_date:
                  type: string
                  format: date
  ### LAND USE DEFINITIONS END
  ### SUPPLY DEFINITIONS
  #Supply:
  #  type: object
  #  properties:
  #    id:
  #      type: integer
  #    stock_quantity:
  #      type: number
  #      format: float
  #    name:
  #      type: string
  #    type:
  #      type: string
  #    establishment_name:
  #      type: string
  Movement:
    type: object
    properties:
      id:
        type: integer
      descripcion:
        type: string
      quantity:
        type: number
        format: float
      execution_date:
        type: string
        format: date
      movement_type:
        type: string
      establishment_name:
        type: string
      cost:
        type: number
        format: float
      inventory_type:
        type: string
  AccountPlans:
    type: object
    properties:
      1st_account_plan:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            applies_second_plan:
              type: boolean
            applies_investment:
              type: boolean
            children:
              type: array
              items:
                type: object
      2nd_account_plan:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            children:
              type: array
              items:
                type: object
  ### SUPPLY/SERVICE AUX DEFINITIONS
  Inventory:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      establishment_name:
        type: string
      inventory_type:
        type: string
      category:
        type: string
      value:
        type: number
        format: float
      quantity:
        type: number
        format: float
      unit:
        type: string
      unit_price:
        type: number
      warning:
        type: boolean
  InventoryExerciseValidations:
    type: object
    properties:
      errors:
        type: object
        properties:
          negative_stock:
            type: array
            items:
              type: object
              properties:
                unit_price:
                  type: number
                  format: float
                inventory_type:
                  type: string
                id:
                  type: integer
                quantity:
                  type: integer
                category:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                name:
                  type: string
                unit:
                  type: string
      warnings:
        type: object
        properties:
          unused_services:
            type: array
            items:
              type: object
              properties:
                unit_price:
                  type: number
                  format: float
                inventory_type:
                  type: string
                id:
                  type: integer
                quantity:
                  type: integer
                category:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                name:
                  type: string
                unit:
                  type: string
  ### SUPPLY/SERVICE AUX DEFINITIONS END
  ### SERVICE DEFINITIONS
  ServicePOST:
    type: object
    properties:
      description:
        type: string
      establishment_id:
        type: integer
      unit:
        type: string
        enum:
          - Kilos
          - Litros
      comments:
        type: string
  ServiceDetail:
    type: object
    properties:
      id:
        type: integer
      quantity:
        type: string
      description:
        type: string
      establishment_name:
        type: string
      unit_price:
        type: number
      unit:
        type: string
        enum:
          - Kilos
          - Litros
      movements:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            quantity:
              type: number
              format: float
            execution_date:
              type: string
              format: date
            movement_type:
              type: string
            cost:
              type: number
              format: float
      comments:
        type: string
      stock_value:
        type: number
        format: float
  ServiceList:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        unit:
          type: string
        stock_value:
          type: number
          format: float
  ### SERVICE DEFINITIONS END
  ### SUPPLY DEFINITIONS
  SupplyPOST:
    type: object
    properties:
      description:
        type: string
      category:
        type: string
        enum:
          - Fungicida
          - Herbicida
          - Insecticida
          - Fertilizante
          - Otro
      establishment_id:
        type: integer
      unit:
        type: string
        enum:
          - Kilos
          - Litros
      comments:
        type: string
      active_components:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            concentration:
              type: number
              format: float
      nitrogen_concentration:
        type: number
        format: float
      potassium_concentration:
        type: number
        format: float
      phosphorus_concentration:
        type: number
        format: float
      sulfur_concentration:
        type: number
        format: float
  SupplyDetail:
    type: object
    properties:
      id:
        type: integer
      quantity:
        type: string
      description:
        type: string
      category:
        type: string
        enum:
          - Fungicida
          - Herbicida
          - Insecticida
          - Fertilizante
          - Otro
      establishment_name:
        type: string
      unit_price:
        type: number
      unit:
        type: string
        enum:
          - Kilos
          - Litros
      movements:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            quantity:
              type: number
              format: float
            execution_date:
              type: string
              format: date
            movement_type:
              type: string
            cost:
              type: number
              format: float
      comments:
        type: string
      stock_value:
        type: number
        format: float
      nitrogen_concentration:
        type: number
        format: float
      sulfur_concentration:
        type: number
        format: float
      phosphorus_concentration:
        type: number
        format: float
      active_components:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            concentration:
              type: number
              format: float
  SupplyCatalogItem:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      unit:
        type: string
  SupplyList:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        unit:
          type: string
        stock_value:
          type: number
          format: float
  ### SUPPLY DEFINITIONS END
  ### FARM EQUIPMENT DEFINITIONS START
  FarmEquipmentPOST:
    type: object
    properties:
      description:
        type: string
      category:
        type: integer
      establishment_id:
        type: integer
      comments:
        type: string
      plate:
        type: string
      useful_life:
        type: number
        format: float
      residual_value:
        type: number
        format: float
      acquisition_date:
        type: number
        format: date
      cost:
        type: number
        format: float
  FarmEquipmentDetail:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      category:
        type: string
      establishment_name:
        type: string
      comments:
        type: string
      plate:
        type: string
      depreciation:
        type: number
        format: float
      useful_life:
        type: number
        format: float
      residual_value:
        type: number
        format: float
      actual_value:
        type: number
        format: float
      cost:
        type: number
        format: float
      acquisition_date:
        type: string
        format: date
      graphic:
        type: object
        properties:
          series:
            type: object
            properties:
              depreciation:
                type: array
                items:
                  type: integer
          categories:
            type: array
            items:
              type: integer
          type_graphic:
            type: string
          name:
            type: string
          yAxis:
            type: string
      movements:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            execution_date:
              type: string
              format: date
            movement_type:
              type: string
            cost:
              type: number
              format: float
  FarmEquipmentType:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  ### FARM EQUIPMENT DEFINITIONS END
  ### INVESTMENTS DEFINITIONS START
  Investment:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      category:
        type: integer
      establishment_name:
        type: string
      start_date:
        type: string
        format: date
      duration:
        type: integer
  InvestmentDetail:
    type: object
    properties:
      description:
        type: string
      category:
        type: string
      establishment_name:
        type: string
      total_value:
        type: number
        format: float
      start_date:
        type: string
        format: date
      comments:
        type: string
      lots:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            area:
              type: number
              format: float
      depreciation_percentages:
        type: array
        items:
          type: object
          properties:
            percentage:
              type: number
              format: float
            closed_exercise:
              type: boolean
            depreciation_value:
              type: integer
  InvestmentPOST:
    type: object
    properties:
      description:
        type: string
      category:
        type: integer
      establishment_id:
        type: integer
      start_value:
        type: integer
      duration:
        type: integer
      comments:
        type: string
      start_date:
        type: string
        format: date
      lots:
        type: array
        items:
          type: integer
      depreciation_percentages:
        type: array
        items:
          type: integer
  InvestmentPATCH:
    type: object
    properties:
      description:
        type: string
      comments:
        type: string
  ### INVESTMENTS DEFINITIONS END
  ### SAVINGS BANKS DEFINITIONS START
  SavingsBank:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      category:
        type: string
      current_savings:
        type: number
        format: float
      curency:
        type: string
      # establishment:
      #   type: integer
  SavingsBankMovementPOST:
    type: object
    properties:
      movement_type:
        type: integer
      cost:
        type: number
        format: float
      description:
        type: string
      execution_date:
        type: string
        format: float
      deposit_type:
        type: integer
  SavingsBankMovement:
    type: object
    properties:
      movement_type:
        type: string
      cost:
        type: number
        format: float
      description:
        type: string
      execution_date:
        type: string
        format: float
  SavingsBankDetail:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      category:
        type: integer
      current_savings:
        type: number
        format: float
      currency:
        type: integer
      establishment:
        type: string
      movements:
        type: array
        items:
          $ref: '#/definitions/SavingsBankMovement'
  SavingsBankPOST:
    type: object
    properties:
      description:
        type: string
      category:
        type: integer
      establishment:
        type: integer
      current_savings:
        type: number
        format: float
      currency:
        type: integer
  SavingsBankPATCH:
    type: object
    properties:
      description:
        type: string
      category:
        type: integer
      current_savings:
        type: number
        format: float
  BanksExerciseValidations:
    type: object
    properties:
      errors:
        type: object
      warnings:
        type: object
        properties:
          negative_savings:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                category:
                  type: string
                description:
                  type: string
                currency:
                  type: string
                current_savings:
                  type: number
                  format: float
  ### SAVINGS BANK DEFINITIONS END
  ### TICKETS DEFINITIONS START
  TicketResponse:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      ammount:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      pending_ammount:
        type: number
        format: float
      emition_date:
        type: string
        format: date
      ticket_number:
        type: string
      ticket_type:
        type: string
      payment_type:
        type: string
      establishment_name:
        type: string
      provider_name:
        type: string
      currency:
        type: string
      last_payment_date:
        type: string
        format: date
  TicketItemBaseDetail:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
  PurchaseAgroItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      crop_type:
        type: string
      tons:
        type: number
        format: float
      extra_expenses:
        type: number
        format: float
  PurchaseCattleItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      category:
        type: integer
      quantity:
        type: integer
      unit_weight:
        type: number
        format: float
      extra_expenses:
        type: number
        format: float
  EconomicSupplyItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      supply_id:
        type: integer
      quantity:
        type: integer
  LotPurchaseItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      geofence:
        $ref: '#/definitions/GEOJson'
      description:
        type: string
      code:
        type: string
      area:
        type: number
        format: float
      productive_area:
        type: number
        format: float
      coneat:
        type: integer
  FarmEquipPurchaseItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      description:
        type: string
      category:
        type: integer
      comments:
        type: string
      plate:
        type: string
      useful_life:
        type: number
        format: float
      residual_value:
        type: number
        format: float
  EconomicGeneralBuyItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      description:
        type: string
      comments:
        type: string
      first_plan:
        type: string
      second_plan:
        type: string
      investment_id:
        type: integer
  EconomicGeneralItem:
    type: object
    properties:
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      imeba:
        type: number
        format: float
      extra_expenses:
        type: number
        format: float
      description:
        type: string
      comments:
        type: string
      sale_type:
        type: integer
  EconomicGeneralGETItem:
    type: object
    properties:
      first_plan_description:
        type: string
      second_plan_description:
        type: string
      investment_description:
        type: integer
      cost:
        type: number
        format: float
      tax_ammount:
        type: number
        format: float
      imeba:
        type: number
        format: float
      extra_expenses:
        type: number
        format: float
      description:
        type: string
      comments:
        type: string
      sale_type_description:
        type: integer
  TicketDetail:
    type: object
    allOf:
      - $ref: "#/definitions/TicketResponse"
      - properties:
          lots:
            type: array
            items:
              type: object
              allOf:
                - $ref: "#/definitions/TicketItemBaseDetail"
                - properties:
                    lot_info:
                      type: object
                      properties:
                        geofence:
                          $ref: '#/definitions/GEOJson'
                        description:
                          type: string
                        code:
                          type: string
                        area:
                          type: number
                          format: float
                        productive_area:
                          type: number
                          format: float
                        coneat:
                          type: integer
          farm_equipments:
            type: array
            items:
              type: object
              allOf:
                - $ref: "#/definitions/TicketItemBaseDetail"
                - properties:
                    equip_info:
                      type: object
                      properties:
                        description:
                          type: string
                        category:
                          type: integer
                        category_name:
                          type: string
                        comments:
                          type: string
                        plate:
                          type: string
                        useful_life:
                          type: number
                          format: float
                        residual_value:
                          type: number
                          format: float
          supplies:
            type: array
            items:
              type: object
              allOf:
                - $ref: "#/definitions/TicketItemBaseDetail"
                - $ref: "#/definitions/EconomicSupplyItem"
                - properties:
                    first_plan_description:
                      type: string
                    second_plan_description:
                      type: string
                    investment_description:
                      type: string
          generals:
            type: array
            items:
              type: object
              allOf:
                - $ref: "#/definitions/TicketItemBaseDetail"
                - $ref: "#/definitions/EconomicGeneralGETItem"
          agro_stock:
            type: array
            items:
              type: object
              allOf:
                - $ref: "#/definitions/TicketItemBaseDetail"
                - $ref: "#/definitions/PurchaseAgroItem"
          horse_stock:
            type: array
            items:
              $ref: "#/definitions/TicketItemBaseDetail"
          ovine_stock:
            type: array
            items:
              $ref: "#/definitions/TicketItemBaseDetail"
          bovine_stock:
            type: array
            items:
              $ref: "#/definitions/TicketItemBaseDetail"
          payments:
            type: array
            items:
              type: object
              properties:
                description:
                  type: string
                savings_bank_desc:
                  type: string
                savings_bank_currency:
                  type: integer
                ammount:
                  type: number
                  format: float
                execution_date:
                  type: string
                  format: date
          notifications:
            $ref: '#/definitions/TicketNotification'
  TicketBasePOST:
    type: object
    properties:
      description:
        type: string
      ticket_number:
        type: string
      provider:
        type: integer
      currency:
        type: integer
      payment_type:
        type: integer
      emition_date:
        type: string
        format: date
      payment_savings_bank:
        type: integer
      establishment_id:
        type: integer
      notifications:
        $ref: '#/definitions/TicketNotification'
  TicketPurchasePOST:
    type: object
    allOf:
      - $ref: "#/definitions/TicketBasePOST"
      - properties:
          lots:
            type: array
            items:
              $ref: "#/definitions/LotPurchaseItem"
          farm_equipment:
            type: array
            items:
              $ref: "#/definitions/FarmEquipPurchaseItem"
          supplies:
            type: array
            items:
              $ref: "#/definitions/EconomicSupplyItem"
          generals:
            type: array
            items:
              $ref: "#/definitions/EconomicGeneralBuyItem"
          agro_stock:
            type: array
            items:
              $ref: "#/definitions/PurchaseAgroItem"
          horse_stock:
            type: array
            items:
              $ref: "#/definitions/PurchaseCattleItem"
          ovine_stock:
            type: array
            items:
              $ref: "#/definitions/PurchaseCattleItem"
          bovine_stock:
            type: array
            items:
              $ref: "#/definitions/PurchaseCattleItem"
  SaleCattleItem:
    type: object
    allOf:
      - $ref: "#/definitions/PurchaseCattleItem"
      - properties:
          imeba:
            type: number
            format: float
  SaleAgroItem:
    type: object
    allOf:
      - $ref: "#/definitions/PurchaseAgroItem"
      - properties:
          imeba:
            type: number
            format: float
  TicketSellPOST:
    type: object
    allOf:
      - $ref: "#/definitions/TicketBasePOST"
      - properties:
          lots:
            type: array
            items:
              type: object
              properties:
                cost:
                  type: number
                  format: float
                tax_ammount:
                  type: number
                  format: float
                lot_id:
                  type: integer
          farm_equipment:
            type: array
            items:
              type: object
              properties:
                cost:
                  type: number
                  format: float
                tax_ammount:
                  type: number
                  format: float
                equipment_id:
                  type: integer
          supplies:
            type: array
            items:
              $ref: "#/definitions/EconomicSupplyItem"
          generals:
            type: array
            items:
              $ref: "#/definitions/EconomicGeneralItem"
          agro_stock:
            type: array
            items:
              $ref: "#/definitions/SaleAgroItem"
          horse_stock:
            type: array
            items:
              $ref: "#/definitions/SaleCattleItem"
          ovine_stock:
            type: array
            items:
              $ref: "#/definitions/SaleCattleItem"
          bovine_stock:
            type: array
            items:
              $ref: "#/definitions/SaleCattleItem"
  TicketNotification:
    type: object
    properties:
      addressees:
        type: array
        items:
          type: string
          format: email
      execution_dates:
        type: array
        items:
          type: object
          properties:
            notif_date:
              type: string
              format: date
            ammount:
              type: number
              format: float
  TicketPATCH:
    type: object
    properties:
      notifications:
        $ref: '#/definitions/TicketNotification'
  PaymentPost:
    type: object
    properties:
      ammount:
        type: number
        format: float
      description:
        type: string
      execution_date:
        type: string
        format: date
      savings_bank:
        type: integer
  Payment:
    type: object
    properties:
      ammount:
        type: number
        format: float
      description:
        type: string
      execution_date:
        type: string
        format: date
      savings_bank_desc:
        type: string
  TicketDuplicate:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      ticket_type:
        type: string
      ammount:
        type: number
        format: float
      pending_ammount:
        type: number
        format: float
      currency:
        type: string
      payment_type:
        type: string
      ticket_number:
        type: integer
      provider_name:
        type: string
      emition_date:
        type: string
        format: date
  TicketExerciseValidations:
      type: object
      properties:
        warnings:
          type: object
          properties:
            pending_payments:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  provider:
                    type: string
                  description:
                    type: string
                  ticket_number:
                    type: integer
                  ticket_type:
                    type: string
                  payment_type:
                    type: string
                  ammount:
                    type: number
                    format: float
                  pending_ammount:
                    type: number
                    format: float
                  emition_date:
                    type: string
                    format: date
            duplicates:
              type: object
              properties:
                description_emition_date:
                  type: array
                  items:
                    type: array
                    items:
                      $ref: "#/definitions/TicketDuplicate"
                emition_date_provider_id:
                  type: array
                  items:
                    type: array
                    items:
                      $ref: "#/definitions/TicketDuplicate"
                provider_id_ticket_number:
                  type: array
                  items:
                    type: array
                    items:
                      $ref: "#/definitions/TicketDuplicate"
        errors:
          type: object
    ### END TICKET MODELS
    ### BEGIN LABOUR MODELS ###
  LaboursListItem:
    type: object
    properties:
      id:
        type: integer
      code:
        type: string
      description:
        type: string
      date:
        type: string
        format: date
      labour_type:
        type: string
      lot:
        type: string
      crop:
        type: string
      land_use_description:
        type: string
      area:
        type: number
        format: float
      execution_stage:
        type: string
      inventory:
        type: string
  Labour:
    type: object
    properties:
      establishment_id:
        type: integer
      description:
        type: string
      land_use_id:
        type: integer
      labour_type:
        type: integer
      investment_id:
        type: integer
      first_plan:
        type: string
      second_plan:
        type: string
      estimated_date:
        type: string
      inventory:
        type: array
        items:
          type: object
          properties:
            dose:
              type: number
              format: float
            inventory_id:
              type: integer
  LabourPATCH:
    type: object
    properties:
      description:
        type: string
      land_use_id:
        type: integer
      labour_type:
        type: integer
      investment_id:
        type: integer
      first_plan:
        type: string
      second_plan:
        type: string
      estimated_date:
        type: string
        format: date
      inventory:
        type: array
        items:
          type: object
          properties:
            dose:
              type: number
              format: float
            inventory_id:
              type: integer
  LabourDetail:
    type: object
    properties:
      description:
        type: string
      land_use_id:
        type: integer
      labour_type:
        type: integer
      investment_id:
        type: integer
      first_plan:
        type: string
      second_plan:
        type: string
      estimated_date:
        type: string
        format: date
      estimated_cost:
        type: number
        format: float
      execution_date:
        type: string
        format: date
      execution_cost:
        type: number
        format: float
      execution_stage:
        type: string
      inventory:
        type: array
        items:
          type: object
          properties:
            inventory_id:
              type: integer
            dose:
              type: number
              format: float
            unit_cost:
              type: number
              format: float
            description:
              type: string
            inventory_type:
              type: string
            category:
              type: integer
      land_use:
        type: object
        properties:
          id:
            type: integer
          land_use_description:
            type: string
          lot_description:
            type: string
          area:
            type: number
            format: float
          crop:
            type: string
          start_date:
            type: string
            format: float
          end_date:
            type: string
            format: float
      notes:
        type: array
        items:
          type: object
          properties:
            author:
              type: string
            content:
              type: string
            date:
              type: string
              format: date
      pending:
        type: boolean
  LaboursToEnd:
    type: object
    properties:
      inventory:
        type: array
        items:
          type: object
          properties:
            planned_quantity:
              type: number
              format: float
            inventory_id:
              type: integer
            category:
              type: integer
            inventory_type:
              type: string
            unit:
              type: string
      land_uses:
        type: array
        items:
          type: object
          properties:
            land_use_id:
              type: integer
            crop_name:
              type: string
            crop_id:
              type: integer
            harvested_area:
              type: number
              format: float
            harvested_tons:
              type: number
              format: float
            sown_area:
              type: number
              format: float
      lots:
        type: array
        items:
          type: object
          properties:
            area:
              type: number
              format: float
            description:
              type: string
  LaboursEnd:
    type: object
    properties:
      establishment_id:
        type: integer
      investment_id:
        type: integer
      first_plan:
        type: string
      second_plan:
        type: string
      labours:
        type: array
        items:
          type: integer
      execution_date:
        type: string
        format: date
      note:
        type: string
      inventory:
        type: array
        items:
          type: object
          properties:
            inventory_id:
              type: integer
            planned_quantity:
              type: integer
            used_quantity:
              type: integer
      land_uses:
        type: array
        items:
          type: object
          properties:
            crop_id:
              type: integer
            harvested_area:
              type: number
              format: float
            harvested_tons:
              type: number
              format: float
  LaboursInventorySummary:
    type: object
    properties:
      quantity:
        type: number
        format: float
      category:
        type: string
      description:
        type: string
      cost:
        type: number
        format: float
      inventory_type:
        type: string
      unit:
        type: string
      first_use_date:
        type: string
        format: date
      last_use_date:
        type: string
        format: date
  LabourExerciseValidations:
    type: object
    properties:
      errors:
        type: object
        properties:
          unfinished_labours:
            type: object
            properties:
              id:
                type: integer
              code:
                type: string
              description:
                type: string
              labour_type:
                type: string
              lot:
                type: string
              land_use_description:
                type: string
              area:
                type: number
                format: float
              estimated_date:
                type: string
                format: date
### Labours END
### AGRO BEGIN
  AgroExerciseValidations:
    type: object
    properties:
      errors:
        type: object
        properties:
          unharvested_land_uses:
            type: array
            items:
              type: object
              properties:
                crop:
                  type: string
                crop_type:
                  type: string
                lot:
                  type: string
                description:
                  type: string
                end_date:
                  type: string
                  format: date
                hectares:
                  type: number
                  format: float
          stock_errors:
            type: array
            items:
              type: object
              properties:
                crop_type:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
                final_stock:
                  type: integer
                initial_stock:
                  type: integer
                production:
                  type: integer
                purchases:
                  type: integer
                adjusts:
                  type: integer
                sales:
                  type: integer
                losses:
                  type: integer
                consumptions:
                  type: integer
          uncosted_harvests:
            type: array
            items:
              type: object
              properties:
                crop_type:
                  type: string
                crop:
                  type: string
                area:
                  type: number
                  format: float
                tons:
                  type: number
                  format: float
      warnings:
        type: object
        properties:
          agro_with_no_data_warning:
            $ref: '#/definitions/Characterization'
          bad_characterization_warning:
            $ref: '#/definitions/Characterization'
  AgroExerciseCost:
    type: object
    properties:
      previous_exercise_cost:
        type: integer
      current_exercise_labours_cost:
        type: integer
      next_exercise_labours_cost:
        type: integer
      general_cost:
        type: integer
      total_area:
        type: integer
      crop:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
      harvested_percentage:
        type: integer
### AGRO END
### CATTLE BEGIN
  CattleStock:
    type: object
    properties:
      category:
        type: string
      initial_stock:
        type: integer
      purchases:
        type: integer
      sales:
        type: integer
      consumptions:
        type: integer
      adjusts:
        type: integer
      deaths:
        type: integer
      births:
        type: integer
      category_plus:
        type: integer
      category_minus:
        type: integer
      current_stock:
        type: integer
  CattleExerciseValidations:
    type: object
    properties:
      errors:
        type: object
        properties:
          weigh_errors:
            type: array
            items:
              type: object
              properties:
                category:
                  type: string
                weighs:
                  type: array
                  items:
                    type: boolean
          stock_errors:
            type: array
            items:
              type: object
              properties:
                category:
                  type: string
                final_stock:
                  type: integer
                initial_stock:
                  type: integer
                births:
                  type: integer
                deaths:
                  type: integer
                adjusts:
                  type: integer
                category_changes_minus:
                  type: integer
                category_changes_plus:
                  type: integer
                consumptions:
                  type: integer
                purchases:
                  type: integer
                sales:
                  type: integer
      warnings:
        type: object
        properties:
          bad_caracterization_warning:
            $ref: '#/definitions/Characterization'
          cattle_with_no_data_warning:
            $ref: '#/definitions/Characterization'
  Weighing:
    type: object
    properties:
      category:
        type: integer
      year_trimester:
        type: integer
      weigh:
        type: number
        format: float
  WeighingWStock:
    type: object
    allOf:
      - $ref: "#/definitions/Weighing"
      - properties:
          quantity:
            type: integer
  WeighingCategoryConfiguration:
    type: object
    properties:
      configuration_category:
        type: integer
      configuration_value:
        type: number
        format: float
  CattleReproductiveEntry:
    type: object
    properties:
      id:
        type: string
        # readOnly: true
      pregnancy_category:
        type: integer
      service_end:
        type: string
        format: date
      service_start:
        type: string
        format: date
      tact_date:
        type: string
        format: date
      marking_date:
        type: string
        format: date
      entored_heads:
        type: integer
      marked_heads:
        type: integer
      pregnant_heads:
        type: integer
      lot:
        type: string
      handle:
        type: integer
      pregnancy_percent:
        type: number
        format: float
      marking_percent:
        type: number
        format: float
      establishment_id:
        type: integer
        # writeOnly: true
### CATTLE END
  ### TECNO PKG DEFINITIONS
  TecnoPackageBrief:
    type: object
    properties:
      id:
        type: integer
      description:
        type: string
      edit_date:
        type: string
        format: date
      cost_p_hectares:
        type: number
        format: float
      crop:
        $ref: '#/definitions/CatalogEntryT3'
      is_global_pkg:
        type: boolean
  TecnoPackageDetail:
    type: object
    properties:
      crop:
        $ref: '#/definitions/CatalogEntryT3'
      is_global_pkg:
        type: boolean
      description:
        type: string
      edit_date:
        type: string
        format: date
      cost_p_hectares:
        type: number
        format: float
      labour_templates:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            estimated_date_day:
              type: integer
            estimated_date_month:
              type: integer
            estimated_date_relative_year:
              type: integer
            labour_type:
              type: integer
            supply_applications:
              type: array
              items:
                type: object
                properties:
                  dose:
                    type: number
                    format: float
                  supply:
                    type: object
                    properties:
                      id:
                        type: integer
                      unit:
                        type: integer
                      category:
                        type: integer
                      # nitrogen_concentration:
                      #   type: number
                      #   format: float
                      # sulfur_concentration:
                      #   type: number
                      #   format: float
                      # phosphorus_concentration:
                      #   type: number
                      #   format: float
                      # potassium_concentration:
                      #   type: number
                      #   format: float
                      # active_components:
                      #   type: array
                      #   items:
                      #     type: integer
            service_applications:
              type: array
              items:
                type: object
                properties:
                  dose:
                    type: number
                    format: float
                  service:
                    type: object
                    properties:
                      id:
                        type: integer
                      unit:
                        type: integer
                      category:
                        type: integer
  TecnoPackagePOST:
    type: object
    properties:
      establishment_id:
        type: integer
      description:
        type: string
      edit_date:
        type: string
        format: date
      crop:
        type: integer
      labour_templates:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            estimated_date_day:
              type: integer
            estimated_date_month:
              type: integer
            estimated_date_relative_year:
              type: integer
            labour_type:
              type: integer
            supply_applications:
              type: array
              items:
                type: object
                properties:
                  dose:
                    type: number
                    format: float
                  supply:
                    type: object
                    properties:
                      id:
                        type: integer
            service_applications:
              type: array
              items:
                type: object
                properties:
                  dose:
                    type: number
                    format: float
                  service:
                    type: object
                    properties:
                      id:
                        type: integer
  ### TECNO PKG DEFINITIONS END
  ### FIN_DE_EJERCICIO DEFINITIONS
  ExerciseRainfalls:
    type: object
    properties:
      establishment_id:
        type: integer
      rainfalls:
        type: array
        items:
          type: object
          properties:
            month:
              type: integer
            millimeters:
              type: integer
  PerfomrPeriodDetail:
    type: object
    properties:
      id:
        type: integer
      establishment:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          some_company:
            type: object
            properties:
              id:
                type: integer
              fantasy_name:
                type: string
              business_name:
                type: string
              rut:
                type: string
          crea_group:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
      ending_date:
        type: string
        format: date
      starting_date:
        type: string
        format: date
      exercise:
        type: integer
      closing_stage:
        type: integer
      current_process:
        type: string
  ClosingProcessNote:
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
        format: date
      content:
        type: string
      author:
        type: string
  InformationStatus:
    type: object
    properties:
      wool:
        type: boolean
      land_use:
        type: boolean
      general:
        type: boolean
      agro:
        type: boolean
      cattle:
        type: boolean
      rainfall:
        type: boolean
      inventory:
        type: boolean
  GeneralIndicators:
    type: object
    properties:
      forestation_area:
        type: integer
      active_land_end_exercise:
        type: integer
      active_leased_land_end_exercise:
        type: integer
      passive_short_term_end_exercise:
        type: integer
      passive_long_term_end_exercise:
        type: integer
      equivalent_handwork:
        type: integer
      woods_value:
        type: integer
      cattle_production:
        type: integer
      legumes_meadow:
        type: integer
      own_land:
        type: integer
      leased_land:
        type: integer
      passive_long_term_begin_exercise:
        type: integer
      passive_short_term_begin_exercise:
        type: integer
  POSTGeneralIndicators:
    type: object
    properties:
      active_land_end_exercise:
        type: integer
      active_leased_land_end_exercise:
        type: integer
      passive_short_term_end_exercise:
        type: integer
      passive_long_term_end_exercise:
        type: integer
      equivalent_handwork:
        type: integer
      woods_value:
        type: integer
      cattle_production:
        type: integer
      legumes_meadow:
        type: integer
  ### FIN_DE_EJERCICIO DEFINITIONS
  ### GIS DEFINITIONS
  Position:
    type: array
    minItems: 2
    maxItems: 2
    items:
      type: number
      format: float
  GEOJson:
    type: object
    discriminator: type
    required:
      - type
    properties:
      type:
        type: string
        enum:
          - MultiPolygon
          - Polygon
          - Point
      coordinates:
        type: array
        items:
          type: integer
  MultiPolygon:
    allOf:
      - $ref: "#/definitions/GEOJson"
      - required:
          - coordinates
        properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  "$ref": "#/definitions/Position"
  Polygon:
    allOf:
      - $ref: "#/definitions/GEOJson"
      - required:
          - coordinates
        properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                "$ref": "#/definitions/Position"
  Point:
    allOf:
      - $ref: "#/definitions/GEOJson"
      - required:
          - coordinates
        properties:
          coordinates:
            "$ref": "#/definitions/Position"
  GEOJsonFeature:
    # como en https://developers.google.com/maps/documentation/javascript/3.exp/reference#Data, el metodo toGeoJson
    type: object
    properties:
      type:
        type: string
        enum:
        - Feature
      geometry:
        $ref: '#/definitions/GEOJson'
      properties:
        type: object
  GEOJsonFeatureCollection:
    # como en https://developers.google.com/maps/documentation/javascript/3.exp/reference#Data, el metodo toGeoJson
    type: object
    properties:
      type:
        type: string
        enum:
        - "FeatureCollection"
      geometries:
        type: array
        items:
          $ref: '#/definitions/GEOJsonFeature'
  ### GIS DEFINITIONS END